(window.webpackJsonp=window.webpackJsonp||[]).push([[191],{690:function(e,n,o){"use strict";o.r(n);var t=o(1),a=Object(t.a)({},(function(){var e=this,n=e._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"state"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#state"}},[e._v("#")]),e._v(" State")]),e._v(" "),n("p",[e._v("The internal state of the "),n("code",[e._v("x/upgrade")]),e._v(" module is relatively minimal and simple. The\nstate contains the currently active upgrade "),n("code",[e._v("Plan")]),e._v(" (if one exists) by key\n"),n("code",[e._v("0x0")]),e._v(" and if a "),n("code",[e._v("Plan")]),e._v(' is marked as "done" by key '),n("code",[e._v("0x1")]),e._v(". The state\ncontains the consensus versions of all app modules in the application. The versions\nare stored as big endian "),n("code",[e._v("uint64")]),e._v(", and can be accessed with prefix "),n("code",[e._v("0x2")]),e._v(" appended\nby the corresponding module name of type "),n("code",[e._v("string")]),e._v(". The state maintains a\n"),n("code",[e._v("Protocol Version")]),e._v(" which can be accessed by key "),n("code",[e._v("0x3")]),e._v(".")]),e._v(" "),n("ul",[n("li",[e._v("Plan: "),n("code",[e._v("0x0 -> Plan")])]),e._v(" "),n("li",[e._v("Done: "),n("code",[e._v("0x1 | byte(plan name) -> BigEndian(Block Height)")])]),e._v(" "),n("li",[e._v("ConsensusVersion: "),n("code",[e._v("0x2 | byte(module name) -> BigEndian(Module Consensus Version)")])]),e._v(" "),n("li",[e._v("ProtocolVersion: "),n("code",[e._v("0x3 -> BigEndian(Protocol Version)")])])]),e._v(" "),n("p",[e._v("The "),n("code",[e._v("x/upgrade")]),e._v(" module contains no genesis state.")])])}),[],!1,null,null,null);n.default=a.exports}}]);