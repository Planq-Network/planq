(window.webpackJsonp=window.webpackJsonp||[]).push([[283],{790:function(e,t,s){"use strict";s.r(t);var o=s(1),n=Object(o.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"list-of-modules"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#list-of-modules"}},[e._v("#")]),e._v(" List of Modules")]),e._v(" "),t("p",[e._v("Here are the modules required in Planq :")]),e._v(" "),t("ul",[t("li",[t("RouterLink",{attrs:{to:"/planq/x/evm/spec/"}},[e._v("EVM")]),e._v(" - Implement the EVM as a Cosmos SDK module.")],1),e._v(" "),t("li",[t("RouterLink",{attrs:{to:"/planq/x/feemarket/spec/"}},[e._v("Fee Market")]),e._v(" - Define a global variable fee for Cosmos transactions based on EIP-1559.")],1),e._v(" "),t("li",[t("RouterLink",{attrs:{to:"/planq/x/erc20/spec/"}},[e._v("erc20")]),e._v(" - Trustless, on-chain bidirectional internal conversion of tokens between Planqs EVM and Cosmos runtimes.")],1)])])}),[],!1,null,null,null);t.default=n.exports}}]);