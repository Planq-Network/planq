(window.webpackJsonp=window.webpackJsonp||[]).push([[139],{638:function(e,t,o){"use strict";o.r(t);var a=o(1),r=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"begin-block"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#begin-block"}},[e._v("#")]),e._v(" Begin Block")]),e._v(" "),t("p",[e._v("At each "),t("code",[e._v("BeginBlock")]),e._v(", all fees received in the previous block are transferred to\nthe distribution "),t("code",[e._v("ModuleAccount")]),e._v(" account. When a delegator or validator\nwithdraws their rewards, they are taken out of the "),t("code",[e._v("ModuleAccount")]),e._v(". During begin\nblock, the different claims on the fees collected are updated as follows:")]),e._v(" "),t("ul",[t("li",[e._v("The block proposer of the previous height and its delegators receive between 1% and 5% of fee rewards.")]),e._v(" "),t("li",[e._v("The reserve community tax is charged.")]),e._v(" "),t("li",[e._v("The remainder is distributed proportionally by voting power to all bonded validators")])]),e._v(" "),t("p",[e._v("To incentivize validators to wait and include additional pre-commits in the block, the block proposer reward is calculated from Tendermint pre-commit messages.")]),e._v(" "),t("h2",{attrs:{id:"the-distribution-scheme"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-distribution-scheme"}},[e._v("#")]),e._v(" The Distribution Scheme")]),e._v(" "),t("p",[e._v("See "),t("RouterLink",{attrs:{to:"/modules/distribution/07_params.html"}},[e._v("params")]),e._v(" for description of parameters.")],1),e._v(" "),t("p",[e._v("Let "),t("code",[e._v("fees")]),e._v(" be the total fees collected in the previous block, including\ninflationary rewards to the stake. All fees are collected in a specific module\naccount during the block. During "),t("code",[e._v("BeginBlock")]),e._v(", they are sent to the\n"),t("code",[e._v('"distribution"')]),e._v(" "),t("code",[e._v("ModuleAccount")]),e._v(". No other sending of tokens occurs. Instead, the\nrewards each account is entitled to are stored, and withdrawals can be triggered\nthrough the messages "),t("code",[e._v("FundCommunityPool")]),e._v(", "),t("code",[e._v("WithdrawValidatorCommission")]),e._v(" and\n"),t("code",[e._v("WithdrawDelegatorReward")]),e._v(".")]),e._v(" "),t("h3",{attrs:{id:"reward-to-the-community-pool"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#reward-to-the-community-pool"}},[e._v("#")]),e._v(" Reward to the Community Pool")]),e._v(" "),t("p",[e._v("The community pool gets "),t("code",[e._v("community_tax * fees")]),e._v(", plus any remaining dust after\nvalidators get their rewards that are always rounded down to the nearest\ninteger value.")]),e._v(" "),t("h3",{attrs:{id:"reward-to-the-validators"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#reward-to-the-validators"}},[e._v("#")]),e._v(" Reward To the Validators")]),e._v(" "),t("p",[e._v("The proposer receives a base reward of "),t("code",[e._v("fees * baseproposerreward")]),e._v(" and a bonus\nof "),t("code",[e._v("fees * bonusproposerreward * P")]),e._v(", where "),t("code",[e._v("P = (total power of validators with included precommits / total bonded validator power)")]),e._v(". The more precommits the\nproposer includes, the larger "),t("code",[e._v("P")]),e._v(" is. "),t("code",[e._v("P")]),e._v(" can never be larger than "),t("code",[e._v("1.00")]),e._v(" (since\nonly bonded validators can supply valid precommits) and is always larger than\n"),t("code",[e._v("2/3")]),e._v(".")]),e._v(" "),t("p",[e._v("Any remaining fees are distributed among all the bonded validators, including\nthe proposer, in proportion to their consensus power.")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"cG93RnJhYyA9IHZhbGlkYXRvciBwb3dlciAvIHRvdGFsIGJvbmRlZCB2YWxpZGF0b3IgcG93ZXIKcHJvcG9zZXJNdWwgPSBiYXNlcHJvcG9zZXJyZXdhcmQgKyBib251c3Byb3Bvc2VycmV3YXJkICogUAp2b3RlTXVsID0gMSAtIGNvbW11bml0eXRheCAtIHByb3Bvc2VyTXVsCg=="}}),e._v(" "),t("p",[e._v("In total, the proposer receives "),t("code",[e._v("fees * (voteMul * powFrac + proposerMul)")]),e._v(".\nAll other validators receive "),t("code",[e._v("fees * voteMul * powFrac")]),e._v(".")]),e._v(" "),t("h3",{attrs:{id:"rewards-to-delegators"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rewards-to-delegators"}},[e._v("#")]),e._v(" Rewards to Delegators")]),e._v(" "),t("p",[e._v("Each validator's rewards are distributed to its delegators. The validator also\nhas a self-delegation that is treated like a regular delegation in\ndistribution calculations.")]),e._v(" "),t("p",[e._v("The validator sets a commission rate. The commission rate is flexible, but each\nvalidator sets a maximum rate and a maximum daily increase. These maximums cannot be exceeded and protect delegators from sudden increases of validator commission rates to prevent validators from taking all of the rewards.")]),e._v(" "),t("p",[e._v("The outstanding rewards that the operator is entitled to are stored in\n"),t("code",[e._v("ValidatorAccumulatedCommission")]),e._v(", while the rewards the delegators are entitled\nto are stored in "),t("code",[e._v("ValidatorCurrentRewards")]),e._v(". The "),t("RouterLink",{attrs:{to:"/modules/distribution/01_concepts.html"}},[e._v("F1 fee distribution\nscheme")]),e._v(" is used to calculate the rewards per delegator as they\nwithdraw or update their delegation, and is thus not handled in "),t("code",[e._v("BeginBlock")]),e._v(".")],1),e._v(" "),t("h3",{attrs:{id:"example-distribution"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#example-distribution"}},[e._v("#")]),e._v(" Example Distribution")]),e._v(" "),t("p",[e._v("For this example distribution, the underlying consensus engine selects block proposers in\nproportion to their power relative to the entire bonded power.")]),e._v(" "),t("p",[e._v("All validators are equally performant at including pre-commits in their proposed\nblocks. Then hold "),t("code",[e._v("(precommits included) / (total bonded validator power)")]),e._v("\nconstant so that the amortized block reward for the validator is "),t("code",[e._v("( validator power / total bonded power) * (1 - community tax rate)")]),e._v(" of\nthe total rewards. Consequently, the reward for a single delegator is:")]),e._v(" "),t("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"KGRlbGVnYXRvciBwcm9wb3J0aW9uIG9mIHRoZSB2YWxpZGF0b3IgcG93ZXIgLyB2YWxpZGF0b3IgcG93ZXIpICogKHZhbGlkYXRvciBwb3dlciAvIHRvdGFsIGJvbmRlZCBwb3dlcikKICAqICgxIC0gY29tbXVuaXR5IHRheCByYXRlKSAqICgxIC0gdmFsaWRhdG9yIGNvbW1pc2lvbiByYXRlKQo9IChkZWxlZ2F0b3IgcHJvcG9ydGlvbiBvZiB0aGUgdmFsaWRhdG9yIHBvd2VyIC8gdG90YWwgYm9uZGVkIHBvd2VyKSAqICgxIC0KY29tbXVuaXR5IHRheCByYXRlKSAqICgxIC0gdmFsaWRhdG9yIGNvbW1pc2lvbiByYXRlKQo="}})],1)}),[],!1,null,null,null);t.default=r.exports}}]);