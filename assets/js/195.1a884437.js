(window.webpackJsonp=window.webpackJsonp||[]).push([[195],{698:function(e,t,r){"use strict";r.r(t);var a=r(1),n=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"changelog"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#changelog"}},[e._v("#")]),e._v(" Changelog")]),e._v(" "),t("h2",{attrs:{id:"v2-0-4-2024-10-18"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v2-0-4-2024-10-18"}},[e._v("#")]),e._v(" [v2.0.4] - 2024-10-18")]),e._v(" "),t("ul",[t("li",[e._v("fix state sync memory leak via iavl backport")]),e._v(" "),t("li",[e._v("fix build by downgrading ledger-cosmos-go dep")])]),e._v(" "),t("h2",{attrs:{id:"v2-0-3-2024-10-17"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v2-0-3-2024-10-17"}},[e._v("#")]),e._v(" [v2.0.3] - 2024-10-17")]),e._v(" "),t("h3",{attrs:{id:"state-machine-breaking"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#state-machine-breaking"}},[e._v("#")]),e._v(" State Machine Breaking")]),e._v(" "),t("ul",[t("li",[e._v("(deps) Bump cosmos-sdk to v0.47.14")]),e._v(" "),t("li",[e._v("(deps) Bump ibc-go to v7.4.0")]),e._v(" "),t("li",[e._v("(ica) Add ICA host submodule")]),e._v(" "),t("li",[e._v("Deprecate usage of x/params in every module")]),e._v(" "),t("li",[e._v("Automatic conversion of IBC coins to their ERC20 representation upon receiving")]),e._v(" "),t("li",[e._v("Support for ERC20 token transfers via IBC")]),e._v(" "),t("li",[e._v("ERC20 proposals to register ERC20 tokens and Cosmos coins now can receive multiple denominations")]),e._v(" "),t("li",[e._v("Prioritized mempool support for Cosmos and Ethereum txs")]),e._v(" "),t("li",[e._v("EIP-1559 support for native Cosmos transactions")]),e._v(" "),t("li",[e._v("(ante) Enable fees to be deducted from unclaimed staking rewards")])]),e._v(" "),t("h2",{attrs:{id:"v1-1-0-2024-02-05"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v1-1-0-2024-02-05"}},[e._v("#")]),e._v(" [v1.1.0] - 2024-02-05")]),e._v(" "),t("h3",{attrs:{id:"state-machine-breaking-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#state-machine-breaking-2"}},[e._v("#")]),e._v(" State Machine Breaking")]),e._v(" "),t("ul",[t("li",[e._v("(erc20) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/commit/567d3779",target:"_blank",rel:"noopener noreferrer"}},[e._v("#567d3779"),t("OutboundLink")],1),e._v(" re-add erc20 cli commands")]),e._v(" "),t("li",[e._v("(erc20) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/commit/b80c5e87",target:"_blank",rel:"noopener noreferrer"}},[e._v("#b80c5e87"),t("OutboundLink")],1),e._v(" enable erc20 module on block 7.516.700"),t("br"),e._v("\nImportant: Please upgrade your binary BEFORE block 7.516.700 to this release.")])]),e._v(" "),t("h2",{attrs:{id:"v1-0-8-2023-11-07"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v1-0-8-2023-11-07"}},[e._v("#")]),e._v(" [v1.0.8] - 2023-11-07")]),e._v(" "),t("ul",[t("li",[e._v("below changes are related to our backported ethermint lib:")]),e._v(" "),t("li",[e._v("fix: align filter rule for debug trace block (#1688)")]),e._v(" "),t("li",[e._v("fix(rpc): align query result of future block for eth_getTransactionCount (#1638)")]),e._v(" "),t("li",[e._v("fix(rpc): align block number input behaviour for eth_getProof (#1639)")]),e._v(" "),t("li",[e._v("fix(rpc): wrong block number in debug trace related api (#1591)")]),e._v(" "),t("li",[e._v("fix(rpc): align fee history (#1611)")]),e._v(" "),t("li",[e._v("fix(rpc): patch gas used api for block less than upgrade height (#1557)")]),e._v(" "),t("li",[e._v("fix: align filter rule for debug trace block (#1688)")]),e._v(" "),t("li",[e._v("tests(filters): add logs by topic test case (#1515)")]),e._v(" "),t("li",[e._v("tests(filters): add/improve integration tests for JSON-RPC methods (#1480)")]),e._v(" "),t("li",[e._v("json-rpc(filters) fix block hash on newBlock filter (#1503)")]),e._v(" "),t("li",[e._v("fix(server): telemetry setup (#1497)")]),e._v(" "),t("li",[e._v("fix: align empty account result for old blocks as ethereum (#1484)")]),e._v(" "),t("li",[e._v("chore: update proto make commands (#1471)")]),e._v(" "),t("li",[e._v("tests: add additional gas consumption tests (#1477)")]),e._v(" "),t("li",[e._v("Remove unbound labels from added custom tendermint metrics (#1434)")]),e._v(" "),t("li",[e._v("fix: protogen scripts were not correctly implemented (#1466)")]),e._v(" "),t("li",[e._v("imp(ante): refactor "),t("code",[e._v("AnteHandler")]),e._v(" (#1455)")]),e._v(" "),t("li",[e._v("added gas consumption test (#1474)")]),e._v(" "),t("li",[e._v("fix: protogen scripts were not correctly implemented (#1466)")]),e._v(" "),t("li",[e._v("tests: Add unit tests for rpc client endpoints (#1409)")]),e._v(" "),t("li",[e._v("build(deps): bump loader-utils from 1.4.1 to 1.4.2 in /tests/solidity (#1464)")]),e._v(" "),t("li",[e._v("fix: remove e2e github action (#1463)")]),e._v(" "),t("li",[e._v("test: remove unused integration tests (#1462)")]),e._v(" "),t("li",[e._v("build(deps): bump alpine from 3.16.2 to 3.16.3 (#1453)")]),e._v(" "),t("li",[e._v("refactor(all): refactor errors import to use cosmossdk.io (#1456)")]),e._v(" "),t("li",[e._v("build(deps): bump golangci/golangci-lint-action from 3.3.0 to 3.3.1 (#1454)")]),e._v(" "),t("li",[e._v("fix: unstable tx_priority test (#1440)")]),e._v(" "),t("li",[e._v("build(deps): bump github.com/spf13/viper from 1.13.0 to 1.14.0 (#1439)")]),e._v(" "),t("li",[e._v("build(deps): bump github.com/onsi/gomega from 1.24.0 to 1.24.1 (#1449)")]),e._v(" "),t("li",[e._v("fix(rpc): decode "),t("code",[e._v("finalized")]),e._v(" block number (#1442)")]),e._v(" "),t("li",[e._v("imp(evm): improve performance of EstimateGas (#1444)")]),e._v(" "),t("li",[e._v("build(deps): bump loader-utils from 1.4.0 to 1.4.1 in /tests/solidity (#1445)")]),e._v(" "),t("li",[e._v("fix: build test on mac by updating to python3.10 (#1437)")]),e._v(" "),t("li",[e._v("Refactor EIP-712 signature verification (#1397)")]),e._v(" "),t("li",[e._v("fix(rpc): different result from "),t("code",[e._v("eth_getProof")]),e._v(" comparing with Ethereum (#1431)")]),e._v(" "),t("li",[e._v("build(deps): bump github.com/onsi/gomega from 1.23.0 to 1.24.0 (#1429)")]),e._v(" "),t("li",[e._v("imp: reduce integration test block time to 2s (#1428)")]),e._v(" "),t("li",[e._v("backport: add v0.19.3 dragonberry changes to "),t("code",[e._v("main")]),e._v(" and bump iavl to v0.19.4 (#1419)")]),e._v(" "),t("li",[e._v("chore(ci): update linters (#1418)")]),e._v(" "),t("li",[e._v("chore(cli): apply google CLI Syntax for required and optional args (#1417)")]),e._v(" "),t("li",[e._v("deps: bump go to v1.19 (#1416)")]),e._v(" "),t("li",[e._v("chore(docs): update SECURITY.md (#1410)")]),e._v(" "),t("li",[e._v("build(deps): bump cachix/cachix-action from 11 to 12 (#1411)")]),e._v(" "),t("li",[e._v("build(deps): bump github.com/cosmos/ibc-go/v5 from 5.0.0 to 5.0.1 (#1412)")]),e._v(" "),t("li",[e._v("build(deps): bump github.com/onsi/gomega from 1.22.1 to 1.23.0 (#1406)")]),e._v(" "),t("li",[e._v("tests(websocket): websocket integration tests (#1355)")]),e._v(" "),t("li",[e._v("build(deps): bump github.com/spf13/cobra from 1.6.0 to 1.6.1 (#1403)")]),e._v(" "),t("li",[e._v("build(deps): bump github.com/onsi/ginkgo/v2 from 2.3.1 to 2.4.0 (#1400)")]),e._v(" "),t("li",[e._v("build(deps): bump github.com/stretchr/testify from 1.8.0 to 1.8.1 (#1399)")]),e._v(" "),t("li",[e._v("fix(evm,rpc): coinbase should not be the current one in traceTransaction execution (#1392)")]),e._v(" "),t("li",[e._v("ime(evm): improve code coverage for EVM keeper (#1396)")]),e._v(" "),t("li",[e._v("feat: format protobuf files (#1395)")]),e._v(" "),t("li",[e._v("build(deps): bump bufbuild/buf-setup-action from 1.8.0 to 1.9.0 (#1394)")]),e._v(" "),t("li",[e._v("imp(ante): refactor for increased "),t("code",[e._v("AnteHandler")]),e._v(" performance (#1393)")]),e._v(" "),t("li",[e._v("refactor: optimize AnteHandler gas consumption (#1388)")]),e._v(" "),t("li",[e._v("fix(evm): skip hash check when the code has been deleted (#1320)")]),e._v(" "),t("li",[e._v("imp(server): Add query-only mode flag for gRPC (#1360)")]),e._v(" "),t("li",[e._v("build(deps): bump google.golang.org/grpc from 1.50.0 to 1.50.1 (#1382)")]),e._v(" "),t("li",[e._v("build(deps): bump cachix/install-nix-action from 17 to 18 (#1380)")]),e._v(" "),t("li",[e._v("build(deps): bump cachix/cachix-action from 10 to 11 (#1371)")]),e._v(" "),t("li",[e._v("build(deps): bump github.com/onsi/gomega from 1.21.1 to 1.22.1 (#1372)")]),e._v(" "),t("li",[e._v("build(deps): bump technote-space/get-diff-action from 6.1.0 to 6.1.1 (#1385)")]),e._v(" "),t("li",[e._v("build(deps): bump golang.org/x/text from 0.3.8 to 0.4.0 (#1387)")]),e._v(" "),t("li",[e._v("build(deps): bump github.com/onsi/ginkgo/v2 from 2.3.0 to 2.3.1 (#1383)")]),e._v(" "),t("li",[e._v("fix(testutils): fix blank bank genesis params (#1379)")]),e._v(" "),t("li",[e._v("build(deps): bump github.com/spf13/cobra from 1.5.0 to 1.6.0 (#1373)")]),e._v(" "),t("li",[e._v("build(deps): bump github.com/onsi/ginkgo/v2 from 2.2.0 to 2.3.0 (#1375)")]),e._v(" "),t("li",[e._v("imp(rpc) Add support for EVM RPC metrics (#1378)")]),e._v(" "),t("li",[e._v("build(deps): bump golang.org/x/text from 0.3.7 to 0.3.8 (#1374)")]),e._v(" "),t("li",[e._v("build(deps): bump apollo-server from 2.25.3 to 2.26.0 in /tests/solidity (#1376)")]),e._v(" "),t("li",[e._v("tests(rpc): Add account info unit tests  (#1339)")]),e._v(" "),t("li",[e._v("build(deps): bump google.golang.org/grpc from 1.49.0 to 1.50.0 (#1365)")]),e._v(" "),t("li",[e._v("build(deps): bump github.com/onsi/gomega from 1.20.2 to 1.21.1 (#1366)")]),e._v(" "),t("li",[e._v("fix: skip fee check on tx simulation (#1364)")]),e._v(" "),t("li",[e._v("fix: "),t("code",[e._v("index-eth-tx")]),e._v(" cmd fail on empty indexer db (#1362)")]),e._v(" "),t("li",[e._v("build(deps): bump protobuf from 3.20.0 to 3.20.2 in /tests/integration_tests (#1358)")]),e._v(" "),t("li",[e._v("fix(rpc): fix gRPC query failure on legacy blocks (#1354)")]),e._v(" "),t("li",[e._v("build(deps): bump actions/stale from 5 to 6 (#1357)")]),e._v(" "),t("li",[e._v("imp(rpc,server): concurrent gRPC queries (#1352)")]),e._v(" "),t("li",[e._v("imp: add export functions for staked & liquid PLQ")])]),e._v(" "),t("h2",{attrs:{id:"v1-0-7"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v1-0-7"}},[e._v("#")]),e._v(" [v1.0.7]")]),e._v(" "),t("ul",[t("li",[e._v("fix: barberry via cosmos-sdk v0.46.3 backport")]),e._v(" "),t("li",[e._v("feat: add pruning cmd")])]),e._v(" "),t("h2",{attrs:{id:"v1-0-6-2023-05-26"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v1-0-6-2023-05-26"}},[e._v("#")]),e._v(" [v1.0.6] - 2023-05-26")]),e._v(" "),t("ul",[t("li",[e._v("fix: Update ibc-go to v5.0.2 patched huckleberry version")])]),e._v(" "),t("h2",{attrs:{id:"v1-0-5-2023-03-07"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v1-0-5-2023-03-07"}},[e._v("#")]),e._v(" [v1.0.5] - 2023-03-07")]),e._v(" "),t("ul",[t("li",[e._v("fix: Bump tendermint to v0.34.26")]),e._v(" "),t("li",[e._v("feat: enforce minimum validator commission of 4%")])]),e._v(" "),t("h2",{attrs:{id:"v1-0-4-2023-03-06"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v1-0-4-2023-03-06"}},[e._v("#")]),e._v(" [v1.0.4] - 2023-03-06")]),e._v(" "),t("ul",[t("li",[e._v("improvement: Use the Informal Systems Tendermint fork")]),e._v(" "),t("li",[e._v("fix: Bump tendermint to v0.34.25")]),e._v(" "),t("li",[e._v("fix: Bump Gin version to v1.7.7")]),e._v(" "),t("li",[e._v("fix: update seed ip")])]),e._v(" "),t("h2",{attrs:{id:"v1-0-3-2023-01-16"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v1-0-3-2023-01-16"}},[e._v("#")]),e._v(" [v1.0.3] - 2023-01-16")]),e._v(" "),t("ul",[t("li",[e._v("fix: snapshot config")]),e._v(" "),t("li",[e._v("fix: update seed ip")])]),e._v(" "),t("h2",{attrs:{id:"v1-0-2-2022-12-18"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v1-0-2-2022-12-18"}},[e._v("#")]),e._v(" [v1.0.2] - 2022-12-18")]),e._v(" "),t("ul",[t("li",[e._v("fix: increase default gas price for cli cmd")]),e._v(" "),t("li",[e._v("fix: apply ics23 patch for dragonberry")])]),e._v(" "),t("h2",{attrs:{id:"v1-0-1-2022-12-16"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v1-0-1-2022-12-16"}},[e._v("#")]),e._v(" [v1.0.1] - 2022-12-16")]),e._v(" "),t("ul",[t("li",[e._v("feat: add 2 more seeds")]),e._v(" "),t("li",[e._v("fix: genesis validation error")]),e._v(" "),t("li",[e._v("feat: add upgrade handler methods")])]),e._v(" "),t("h2",{attrs:{id:"v1-0-0-2022-10-25"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v1-0-0-2022-10-25"}},[e._v("#")]),e._v(" [v1.0.0] - 2022-10-25")]),e._v(" "),t("h3",{attrs:{id:"state-machine-breaking-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#state-machine-breaking-3"}},[e._v("#")]),e._v(" State Machine Breaking")]),e._v(" "),t("ul",[t("li",[e._v("(all) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/commit/a55b2d22",target:"_blank",rel:"noopener noreferrer"}},[e._v("#a55b2d22"),t("OutboundLink")],1),e._v("\nEnables "),t("code",[e._v("ERC20")]),e._v(" module\nUpdates "),t("code",[e._v("MinGasPrice")]),e._v(" to "),t("code",[e._v("20000000000")]),e._v("\nUpdates "),t("code",[e._v("Block.MaxGas")]),e._v(" to "),t("code",[e._v("40000000")]),e._v("\nEnables "),t("code",[e._v("2929")]),e._v(", "),t("code",[e._v("2200")]),e._v(", "),t("code",[e._v("1884")]),e._v(", "),t("code",[e._v("1344")]),e._v(" extra EIPs")]),e._v(" "),t("li",[e._v("(erc20) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/commit/3e9bede6",target:"_blank",rel:"noopener noreferrer"}},[e._v("#3e9bede6"),t("OutboundLink")],1),e._v(" "),t("code",[e._v("third_party/proto")]),e._v(": add erc20 module support")]),e._v(" "),t("li",[e._v("(ethermint) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/commit/a47342ff7470e25dfb2fdd45f4f1426e65b25028",target:"_blank",rel:"noopener noreferrer"}},[e._v("#a47342ff"),t("OutboundLink")],1),e._v("  Add "),t("code",[e._v("ethermint")]),e._v(" as dependency")]),e._v(" "),t("li",[e._v("(deps) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/commit/a47342ff",target:"_blank",rel:"noopener noreferrer"}},[e._v("#685869a1"),t("OutboundLink")],1),e._v(" Bump github.com/cosmos/ibc-go/v5")]),e._v(" "),t("li",[e._v("(deps) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/commit/f9c74e23",target:"_blank",rel:"noopener noreferrer"}},[e._v("#f9c74e23"),t("OutboundLink")],1),e._v(" Update cosmos-sdk to "),t("code",[e._v("v0.46.1")])])]),e._v(" "),t("h3",{attrs:{id:"improvements"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#improvements"}},[e._v("#")]),e._v(" Improvements")]),e._v(" "),t("ul",[t("li",[e._v("(tests) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/commit/f93935c3",target:"_blank",rel:"noopener noreferrer"}},[e._v("#f93935c3"),t("OutboundLink")],1),e._v(" Add "),t("code",[e._v("GetConsensusParams")]),e._v(" and "),t("code",[e._v("GetGRPCClient")]),e._v(" function to network testutil, to test against upgrades and forks")]),e._v(" "),t("li",[e._v("(upgrades) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/commit/5a243120",target:"_blank",rel:"noopener noreferrer"}},[e._v("#5a243120"),t("OutboundLink")],1),e._v(" Update upgrade structure")])]),e._v(" "),t("h2",{attrs:{id:"v0-18-0-2022-08-04"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-18-0-2022-08-04"}},[e._v("#")]),e._v(" [v0.18.0] - 2022-08-04")]),e._v(" "),t("h3",{attrs:{id:"state-machine-breaking-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#state-machine-breaking-4"}},[e._v("#")]),e._v(" State Machine Breaking")]),e._v(" "),t("ul",[t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1234",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1234"),t("OutboundLink")],1),e._v(" Fix "),t("a",{attrs:{href:"https://github.com/planq-network/planq/security/advisories/GHSA-f92v-grc2-w2fg",target:"_blank",rel:"noopener noreferrer"}},[e._v("CVE-2022-35936"),t("OutboundLink")],1),e._v(" security vulnerability.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1174",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1174"),t("OutboundLink")],1),e._v(" Don't allow eth txs with 0 in mempool.")])]),e._v(" "),t("h3",{attrs:{id:"improvements-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#improvements-2"}},[e._v("#")]),e._v(" Improvements")]),e._v(" "),t("ul",[t("li",[e._v("(ante) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1208",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1208"),t("OutboundLink")],1),e._v(" Change default "),t("code",[e._v("MaxGasWanted")]),e._v(" value.")])]),e._v(" "),t("h2",{attrs:{id:"v0-17-2-2022-07-26"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-17-2-2022-07-26"}},[e._v("#")]),e._v(" [v0.17.2] - 2022-07-26")]),e._v(" "),t("h3",{attrs:{id:"bug-fixes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bug-fixes"}},[e._v("#")]),e._v(" Bug Fixes")]),e._v(" "),t("ul",[t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/issues/1190",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1190"),t("OutboundLink")],1),e._v(" Fix "),t("code",[e._v("UnmarshalJSON")]),e._v(" panic of breaking EVM and fee market "),t("code",[e._v("Params")]),e._v(".")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1187",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1187"),t("OutboundLink")],1),e._v(" Fix "),t("code",[e._v("TxIndex")]),e._v(" value (expected 0, actual 1) when trace the first tx of a block via "),t("code",[e._v("debug_traceTransaction")]),e._v(" API.")])]),e._v(" "),t("h2",{attrs:{id:"v0-17-1-2022-07-13"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-17-1-2022-07-13"}},[e._v("#")]),e._v(" [v0.17.1] - 2022-07-13")]),e._v(" "),t("h3",{attrs:{id:"improvements-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#improvements-3"}},[e._v("#")]),e._v(" Improvements")]),e._v(" "),t("ul",[t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1169",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1169"),t("OutboundLink")],1),e._v(" Remove unnecessary queries from "),t("code",[e._v("getBlockNumber")]),e._v(" function")])]),e._v(" "),t("h2",{attrs:{id:"v0-17-0-2022-06-27"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-17-0-2022-06-27"}},[e._v("#")]),e._v(" [v0.17.0] - 2022-06-27")]),e._v(" "),t("h3",{attrs:{id:"state-machine-breaking-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#state-machine-breaking-5"}},[e._v("#")]),e._v(" State Machine Breaking")]),e._v(" "),t("ul",[t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1128",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1128"),t("OutboundLink")],1),e._v(" Clear tx logs if tx failed in post processing hooks")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1124",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1124"),t("OutboundLink")],1),e._v(" Reject non-replay-protected tx in "),t("code",[e._v("AnteHandler")]),e._v(" to prevent replay attack")])]),e._v(" "),t("h3",{attrs:{id:"api-breaking"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#api-breaking"}},[e._v("#")]),e._v(" API Breaking")]),e._v(" "),t("ul",[t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1126",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1126"),t("OutboundLink")],1),e._v(" Make some JSON-RPC APIS work for pruned nodes.")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1143",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1143"),t("OutboundLink")],1),e._v(" Restrict unprotected txs on the node JSON-RPC configuration.")]),e._v(" "),t("li",[e._v("(all) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1137",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1137"),t("OutboundLink")],1),e._v(" Rename go module to "),t("code",[e._v("planq-network/planq")])])]),e._v(" "),t("h3",{attrs:{id:"api-breaking-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#api-breaking-2"}},[e._v("#")]),e._v(" API Breaking")]),e._v(" "),t("ul",[t("li",[e._v("(json-rpc) "),t("a",{attrs:{href:"https://github.com/tharsis/ethermint/pull/1121",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1121"),t("OutboundLink")],1),e._v(" Store eth tx index separately")])]),e._v(" "),t("h3",{attrs:{id:"improvements-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#improvements-4"}},[e._v("#")]),e._v(" Improvements")]),e._v(" "),t("ul",[t("li",[e._v("(deps) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1147",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1147"),t("OutboundLink")],1),e._v(" Bump Go version to "),t("code",[e._v("1.18")]),e._v(".")]),e._v(" "),t("li",[e._v("(feemarket) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1135",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1135"),t("OutboundLink")],1),e._v(" Set lower bound of base fee to min gas price param")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1142",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1142"),t("OutboundLink")],1),e._v(" Rename "),t("code",[e._v("RejectUnprotectedTx")]),e._v(" to "),t("code",[e._v("AllowUnprotectedTxs")]),e._v(" for consistency with go-ethereum.")])]),e._v(" "),t("h3",{attrs:{id:"bug-fixes-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bug-fixes-2"}},[e._v("#")]),e._v(" Bug Fixes")]),e._v(" "),t("ul",[t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1138",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1138"),t("OutboundLink")],1),e._v(" Fix GasPrice calculation with relation to "),t("code",[e._v("MinGasPrice")])])]),e._v(" "),t("h2",{attrs:{id:"v0-16-1-2022-06-09"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-16-1-2022-06-09"}},[e._v("#")]),e._v(" [v0.16.1] - 2022-06-09")]),e._v(" "),t("h3",{attrs:{id:"improvements-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#improvements-5"}},[e._v("#")]),e._v(" Improvements")]),e._v(" "),t("ul",[t("li",[e._v("(feemarket) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1120",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1120"),t("OutboundLink")],1),e._v(" Make "),t("code",[e._v("min-gas-multiplier")]),e._v(" parameter accept zero value")])]),e._v(" "),t("h3",{attrs:{id:"bug-fixes-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bug-fixes-3"}},[e._v("#")]),e._v(" Bug Fixes")]),e._v(" "),t("ul",[t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1118",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1118"),t("OutboundLink")],1),e._v(" Fix "),t("code",[e._v("Type()")]),e._v(" "),t("code",[e._v("Account")]),e._v(" method "),t("code",[e._v("EmptyCodeHash")]),e._v(" comparison")])]),e._v(" "),t("h2",{attrs:{id:"v0-16-0-2022-06-06"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-16-0-2022-06-06"}},[e._v("#")]),e._v(" [v0.16.0] - 2022-06-06")]),e._v(" "),t("h3",{attrs:{id:"state-machine-breaking-6"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#state-machine-breaking-6"}},[e._v("#")]),e._v(" State Machine Breaking")]),e._v(" "),t("ul",[t("li",[e._v("(feemarket) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1105",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1105"),t("OutboundLink")],1),e._v(" Update "),t("code",[e._v("BaseFee")]),e._v(" calculation based on "),t("code",[e._v("GasWanted")]),e._v(" instead of "),t("code",[e._v("GasUsed")]),e._v(".")])]),e._v(" "),t("h3",{attrs:{id:"api-breaking-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#api-breaking-3"}},[e._v("#")]),e._v(" API Breaking")]),e._v(" "),t("ul",[t("li",[e._v("(feemarket) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1104",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1104"),t("OutboundLink")],1),e._v(" Enforce a minimum gas price for Cosmos and EVM transactions through the "),t("code",[e._v("MinGasPrice")]),e._v(" parameter.")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1081",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1081"),t("OutboundLink")],1),e._v(" Deduplicate some json-rpc logic codes, cleanup several dead functions.")]),e._v(" "),t("li",[e._v("(ante) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1062",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1062"),t("OutboundLink")],1),e._v(" Emit event of eth tx hash in ante handler to support query failed transactions.")]),e._v(" "),t("li",[e._v("(analytics) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1106",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1106"),t("OutboundLink")],1),e._v(" Update telemetry to Ethermint modules.")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1108",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1108"),t("OutboundLink")],1),e._v(" Update GetGasPrice RPC endpoint with global "),t("code",[e._v("MinGasPrice")])])]),e._v(" "),t("h3",{attrs:{id:"improvements-6"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#improvements-6"}},[e._v("#")]),e._v(" Improvements")]),e._v(" "),t("ul",[t("li",[e._v("(cli) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1086",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1086"),t("OutboundLink")],1),e._v(" Add rollback command.")]),e._v(" "),t("li",[e._v("(specs) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1095",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1095"),t("OutboundLink")],1),e._v(" Add more evm specs concepts.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1101",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1101"),t("OutboundLink")],1),e._v(" Add tx_type, gas and counter telemetry for ethereum txs.")])]),e._v(" "),t("h3",{attrs:{id:"bug-fixes-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bug-fixes-4"}},[e._v("#")]),e._v(" Bug Fixes")]),e._v(" "),t("ul",[t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1082",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1082"),t("OutboundLink")],1),e._v(" fix gas price returned in getTransaction api.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1088",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1088"),t("OutboundLink")],1),e._v(" Fix ability to append log in tx post processing.")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1081",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1081"),t("OutboundLink")],1),e._v(" fix "),t("code",[e._v("debug_getBlockRlp")]),e._v("/"),t("code",[e._v("debug_printBlock")]),e._v(" don't filter failed transactions.")]),e._v(" "),t("li",[e._v("(ante) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1111",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1111"),t("OutboundLink")],1),e._v(" Move CanTransfer decorator before GasConsume decorator")]),e._v(" "),t("li",[e._v("(types) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/1112",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1112"),t("OutboundLink")],1),e._v(" Add "),t("code",[e._v("GetBaseAccount")]),e._v(" to avoid invalid account error when create vesting account.")])]),e._v(" "),t("h2",{attrs:{id:"v0-15-0-2022-05-09"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-15-0-2022-05-09"}},[e._v("#")]),e._v(" [v0.15.0] - 2022-05-09")]),e._v(" "),t("h3",{attrs:{id:"state-machine-breaking-7"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#state-machine-breaking-7"}},[e._v("#")]),e._v(" State Machine Breaking")]),e._v(" "),t("ul",[t("li",[e._v("(ante) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1060",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1060"),t("OutboundLink")],1),e._v(" Check "),t("code",[e._v("EnableCreate")]),e._v("/"),t("code",[e._v("EnableCall")]),e._v(" in "),t("code",[e._v("AnteHandler")]),e._v(" to short-circuit EVM transactions.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1087",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1087"),t("OutboundLink")],1),e._v(" Minimum GasUsed proportional to GasLimit and "),t("code",[e._v("MinGasDenominator")]),e._v(" EVM module param.")])]),e._v(" "),t("h3",{attrs:{id:"api-breaking-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#api-breaking-4"}},[e._v("#")]),e._v(" API Breaking")]),e._v(" "),t("ul",[t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1070",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1070"),t("OutboundLink")],1),e._v(" Refactor "),t("code",[e._v("rpc/")]),e._v(" package:\n"),t("ul",[t("li",[t("code",[e._v("Backend")]),e._v(" interface is now "),t("code",[e._v("BackendI")]),e._v(", which implements "),t("code",[e._v("EVMBackend")]),e._v(" (for Ethereum namespaces) and "),t("code",[e._v("CosmosBackend")]),e._v(" (for Cosmos namespaces)")]),e._v(" "),t("li",[e._v("Previous "),t("code",[e._v("EVMBackend")]),e._v(" type is now "),t("code",[e._v("Backend")]),e._v(", which is the concrete implementation of "),t("code",[e._v("BackendI")])]),e._v(" "),t("li",[e._v("Move "),t("code",[e._v("rpc/ethereum/types")]),e._v(" -> "),t("code",[e._v("rpc/types")])]),e._v(" "),t("li",[e._v("Move "),t("code",[e._v("rpc/ethereum/backend")]),e._v(" -> "),t("code",[e._v("rpc/backend")])]),e._v(" "),t("li",[e._v("Move "),t("code",[e._v("rpc/ethereum/namespaces")]),e._v(" -> "),t("code",[e._v("rpc/namespaces/ethereum")])])])]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1068",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1068"),t("OutboundLink")],1),e._v(" Fix London hard-fork check logic in JSON-RPC APIs.")])]),e._v(" "),t("h3",{attrs:{id:"improvements-7"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#improvements-7"}},[e._v("#")]),e._v(" Improvements")]),e._v(" "),t("ul",[t("li",[e._v("(ci, evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1063",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1063"),t("OutboundLink")],1),e._v(" Run simulations on CI.")])]),e._v(" "),t("h3",{attrs:{id:"bug-fixes-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bug-fixes-5"}},[e._v("#")]),e._v(" Bug Fixes")]),e._v(" "),t("ul",[t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1059",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1059"),t("OutboundLink")],1),e._v(" Remove unnecessary event filtering logic on the "),t("code",[e._v("eth_baseFee")]),e._v(" JSON-RPC endpoint.")])]),e._v(" "),t("h2",{attrs:{id:"v0-14-0-2022-04-19"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-14-0-2022-04-19"}},[e._v("#")]),e._v(" [v0.14.0] - 2022-04-19")]),e._v(" "),t("h3",{attrs:{id:"api-breaking-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#api-breaking-5"}},[e._v("#")]),e._v(" API Breaking")]),e._v(" "),t("ul",[t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1051",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1051"),t("OutboundLink")],1),e._v(" Context block height fix on TraceTx. Removes "),t("code",[e._v("tx_index")]),e._v(" on "),t("code",[e._v("QueryTraceTxRequest")]),e._v(" proto type.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1091",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1091"),t("OutboundLink")],1),e._v(" Add query params command on EVM Module")])]),e._v(" "),t("h3",{attrs:{id:"improvements-8"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#improvements-8"}},[e._v("#")]),e._v(" Improvements")]),e._v(" "),t("ul",[t("li",[e._v("(deps) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1046",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1046"),t("OutboundLink")],1),e._v(" Bump Cosmos SDK version to "),t("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/releases/tag/v0.45.3",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("v0.45.3")]),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1056",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1056"),t("OutboundLink")],1),e._v(" Make json-rpc namespaces extensible")])]),e._v(" "),t("h3",{attrs:{id:"bug-fixes-6"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bug-fixes-6"}},[e._v("#")]),e._v(" Bug Fixes")]),e._v(" "),t("ul",[t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1050",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1050"),t("OutboundLink")],1),e._v(" "),t("code",[e._v("eth_getBlockByNumber")]),e._v(" fix on batch transactions")]),e._v(" "),t("li",[e._v("(app) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/issues/658",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#658"),t("OutboundLink")],1),e._v(" Support simulations for the EVM.")])]),e._v(" "),t("h2",{attrs:{id:"v0-13-0-2022-04-05"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-13-0-2022-04-05"}},[e._v("#")]),e._v(" [v0.13.0] - 2022-04-05")]),e._v(" "),t("h3",{attrs:{id:"api-breaking-6"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#api-breaking-6"}},[e._v("#")]),e._v(" API Breaking")]),e._v(" "),t("ul",[t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1027",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1027"),t("OutboundLink")],1),e._v(" Change the "),t("code",[e._v("PostTxProcessing")]),e._v(" hook interface to include the full message data.")]),e._v(" "),t("li",[e._v("(feemarket) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1026",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1026"),t("OutboundLink")],1),e._v(" Fix REST endpoints to use "),t("code",[e._v("/ethermint/feemarket/*")]),e._v(" instead of "),t("code",[e._v("/feemarket/evm/*")]),e._v(".")])]),e._v(" "),t("h3",{attrs:{id:"improvements-9"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#improvements-9"}},[e._v("#")]),e._v(" Improvements")]),e._v(" "),t("ul",[t("li",[e._v("(deps) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1029",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1029"),t("OutboundLink")],1),e._v(" Bump Cosmos SDK version to "),t("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/releases/tag/v0.45.2",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("v0.45.2")]),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1025",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1025"),t("OutboundLink")],1),e._v(" Allow to append logs after a post processing hook.")])]),e._v(" "),t("h2",{attrs:{id:"v0-12-2-2022-03-30"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-12-2-2022-03-30"}},[e._v("#")]),e._v(" [v0.12.2] - 2022-03-30")]),e._v(" "),t("h3",{attrs:{id:"bug-fixes-7"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bug-fixes-7"}},[e._v("#")]),e._v(" Bug Fixes")]),e._v(" "),t("ul",[t("li",[e._v("(feemarket) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1021",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1021"),t("OutboundLink")],1),e._v(" Fix fee market migration.")])]),e._v(" "),t("h2",{attrs:{id:"v0-12-1-2022-03-29"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-12-1-2022-03-29"}},[e._v("#")]),e._v(" [v0.12.1] - 2022-03-29")]),e._v(" "),t("h3",{attrs:{id:"bug-fixes-8"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bug-fixes-8"}},[e._v("#")]),e._v(" Bug Fixes")]),e._v(" "),t("ul",[t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1016",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1016"),t("OutboundLink")],1),e._v(" Update validate basic check for storage state.")])]),e._v(" "),t("h2",{attrs:{id:"v0-12-0-2022-03-24"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-12-0-2022-03-24"}},[e._v("#")]),e._v(" [v0.12.0] - 2022-03-24")]),e._v(" "),t("h3",{attrs:{id:"bug-fixes-9"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bug-fixes-9"}},[e._v("#")]),e._v(" Bug Fixes")]),e._v(" "),t("ul",[t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1012",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1012"),t("OutboundLink")],1),e._v(" fix the tx hash in filter entries created by "),t("code",[e._v("eth_newPendingTransactionFilter")]),e._v(".")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1006",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1006"),t("OutboundLink")],1),e._v(" Use "),t("code",[e._v("string")]),e._v(" as the parameters type to correct ambiguous results.")]),e._v(" "),t("li",[e._v("(ante) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/1004",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#1004"),t("OutboundLink")],1),e._v(" Make "),t("code",[e._v("MaxTxGasWanted")]),e._v(" configurable.")]),e._v(" "),t("li",[e._v("(ante) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/991",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#991"),t("OutboundLink")],1),e._v(" Set an upper bound to gasWanted to prevent DoS attack.")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/990",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#990"),t("OutboundLink")],1),e._v(" Calculate reward values from all "),t("code",[e._v("MsgEthereumTx")]),e._v(" from a block in "),t("code",[e._v("eth_feeHistory")]),e._v(".")])]),e._v(" "),t("h2",{attrs:{id:"v0-11-0-2022-03-06"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-11-0-2022-03-06"}},[e._v("#")]),e._v(" [v0.11.0] - 2022-03-06")]),e._v(" "),t("h3",{attrs:{id:"state-machine-breaking-8"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#state-machine-breaking-8"}},[e._v("#")]),e._v(" State Machine Breaking")]),e._v(" "),t("ul",[t("li",[e._v("(ante) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/964",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#964"),t("OutboundLink")],1),e._v(" add NewInfiniteGasMeterWithLimit for storing the user provided gas limit. Fixes block's consumed gas calculation in the block creation phase.")])]),e._v(" "),t("h3",{attrs:{id:"bug-fixes-10"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bug-fixes-10"}},[e._v("#")]),e._v(" Bug Fixes")]),e._v(" "),t("ul",[t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/975",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#975"),t("OutboundLink")],1),e._v(" Fix unexpected "),t("code",[e._v("nil")]),e._v(" values for "),t("code",[e._v("reward")]),e._v(", returned by "),t("code",[e._v("EffectiveGasTipValue(blockBaseFee)")]),e._v(" in the "),t("code",[e._v("eth_feeHistory")]),e._v(" RPC method.")])]),e._v(" "),t("h3",{attrs:{id:"improvements-10"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#improvements-10"}},[e._v("#")]),e._v(" Improvements")]),e._v(" "),t("ul",[t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/979",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#979"),t("OutboundLink")],1),e._v(" Add configurable timeouts to http server")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/988",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#988"),t("OutboundLink")],1),e._v(" json-rpc server always use local rpc client")])]),e._v(" "),t("h2",{attrs:{id:"v0-10-1-2022-03-04"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-10-1-2022-03-04"}},[e._v("#")]),e._v(" [v0.10.1] - 2022-03-04")]),e._v(" "),t("h3",{attrs:{id:"bug-fixes-11"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bug-fixes-11"}},[e._v("#")]),e._v(" Bug Fixes")]),e._v(" "),t("ul",[t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/970",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#970"),t("OutboundLink")],1),e._v(" Fix unexpected nil reward values on "),t("code",[e._v("eth_feeHistory")]),e._v(" response")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/issues/529",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#529"),t("OutboundLink")],1),e._v(" Add support return value on trace tx response.")])]),e._v(" "),t("h3",{attrs:{id:"improvements-11"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#improvements-11"}},[e._v("#")]),e._v(" Improvements")]),e._v(" "),t("ul",[t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/968",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#968"),t("OutboundLink")],1),e._v(" Add some buffer to returned gas price to provide better default UX for client.")])]),e._v(" "),t("h2",{attrs:{id:"v0-10-0-2022-02-26"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-10-0-2022-02-26"}},[e._v("#")]),e._v(" [v0.10.0] - 2022-02-26")]),e._v(" "),t("h3",{attrs:{id:"api-breaking-7"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#api-breaking-7"}},[e._v("#")]),e._v(" API Breaking")]),e._v(" "),t("ul",[t("li",[e._v("(ante) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/866",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#866"),t("OutboundLink")],1),e._v(" "),t("code",[e._v("NewAnteHandler")]),e._v(" constructor now receives a "),t("code",[e._v("HandlerOptions")]),e._v(" field.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/849",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#849"),t("OutboundLink")],1),e._v(" "),t("code",[e._v("PostTxProcessing")]),e._v(" hook now takes an Ethereum tx "),t("code",[e._v("Receipt")]),e._v(" and a "),t("code",[e._v("from")]),e._v(" "),t("code",[e._v("Address")]),e._v(" as arguments.")]),e._v(" "),t("li",[e._v("(ante) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/916",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#916"),t("OutboundLink")],1),e._v(" Don't check min-gas-price for eth tx if london hardfork enabled and feemarket enabled.")])]),e._v(" "),t("h3",{attrs:{id:"state-machine-breaking-9"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#state-machine-breaking-9"}},[e._v("#")]),e._v(" State Machine Breaking")]),e._v(" "),t("ul",[t("li",[e._v("(deps) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/912",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#912"),t("OutboundLink")],1),e._v(" Bump Cosmos SDK version to "),t("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/releases/tag/v0.45.1",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("v0.45.1")]),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/840",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#840"),t("OutboundLink")],1),e._v(" Store empty topics as empty array rather than nil.")]),e._v(" "),t("li",[e._v("(feemarket) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/822",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#822"),t("OutboundLink")],1),e._v(" Update EIP1559 base fee in "),t("code",[e._v("BeginBlock")]),e._v(".")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/817",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#817"),t("OutboundLink")],1),e._v(" Use "),t("code",[e._v("effectiveGasPrice")]),e._v(" in ante handler, add "),t("code",[e._v("effectiveGasPrice")]),e._v(" to tx receipt.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/issues/808",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#808"),t("OutboundLink")],1),e._v(" increase nonce in ante handler for contract creation transaction.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/851",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#851"),t("OutboundLink")],1),e._v(" fix contract address used in EVM, this issue is caused by "),t("a",{attrs:{href:"https://github.com/planq-network/planq/issues/808",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#808"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("li",[e._v("(evm)  Reject invalid "),t("code",[e._v("MsgEthereumTx")]),e._v(" wrapping tx")]),e._v(" "),t("li",[e._v("(evm)  Fix "),t("code",[e._v("SelfDestruct")]),e._v(" opcode by deleting account code and state.")]),e._v(" "),t("li",[e._v("(feemarket) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/855",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#855"),t("OutboundLink")],1),e._v(" Consistent "),t("code",[e._v("BaseFee")]),e._v(" check logic.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/729",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#729"),t("OutboundLink")],1),e._v(" Refactor EVM "),t("code",[e._v("StateDB")]),e._v(" implementation.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/945",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#945"),t("OutboundLink")],1),e._v(" Bumb Go-ethereum version to "),t("a",{attrs:{href:"https://github.com/ethereum/go-ethereum/releases/tag/v1.10.16",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("v1.10.16")]),t("OutboundLink")],1)])]),e._v(" "),t("h3",{attrs:{id:"features"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#features"}},[e._v("#")]),e._v(" Features")]),e._v(" "),t("ul",[t("li",[e._v("(ante) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/950",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#950"),t("OutboundLink")],1),e._v(" Add support for EIP712 signed Cosmos transactions")])]),e._v(" "),t("h3",{attrs:{id:"improvements-12"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#improvements-12"}},[e._v("#")]),e._v(" Improvements")]),e._v(" "),t("ul",[t("li",[e._v("(types) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/884",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#884"),t("OutboundLink")],1),e._v(" Introduce a new "),t("code",[e._v("EthAccountI")]),e._v(" interface for EVM-compatible account types.")]),e._v(" "),t("li",[e._v("(types) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/849",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#849"),t("OutboundLink")],1),e._v(" Add "),t("code",[e._v("Type")]),e._v(" function to distinguish EOAs from Contract accounts.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/issues/826",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#826"),t("OutboundLink")],1),e._v(" Improve allocation of bytes of "),t("code",[e._v("tx.To")]),e._v(" address.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/issues/827",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#827"),t("OutboundLink")],1),e._v(" Speed up creation of event logs by using the slice insertion idiom with indices.")]),e._v(" "),t("li",[e._v("(ante) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/819",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#819"),t("OutboundLink")],1),e._v(" Remove redundant ante handlers")]),e._v(" "),t("li",[e._v("(app) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/873",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#873"),t("OutboundLink")],1),e._v(" Validate code hash in GenesisAccount")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/901",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#901"),t("OutboundLink")],1),e._v(" Support multiple "),t("code",[e._v("MsgEthereumTx")]),e._v(" in single tx.")]),e._v(" "),t("li",[e._v("(config) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/908",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#908"),t("OutboundLink")],1),e._v(" Add "),t("code",[e._v("api.enable")]),e._v(" flag for Cosmos SDK Rest server")]),e._v(" "),t("li",[e._v("(feemarket) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/919",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#919"),t("OutboundLink")],1),e._v(" Initialize baseFee in default genesis state.")]),e._v(" "),t("li",[e._v("(feemarket) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/943",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#943"),t("OutboundLink")],1),e._v(" Store the base fee as a module param instead of using state storage.")])]),e._v(" "),t("h3",{attrs:{id:"bug-fixes-12"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bug-fixes-12"}},[e._v("#")]),e._v(" Bug Fixes")]),e._v(" "),t("ul",[t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/955",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#955"),t("OutboundLink")],1),e._v(" Fix websocket server push duplicated messages to subscriber.")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/953",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#953"),t("OutboundLink")],1),e._v(" Add "),t("code",[e._v("eth_signTypedData")]),e._v(" api support.")]),e._v(" "),t("li",[e._v("(log) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/948",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#948"),t("OutboundLink")],1),e._v(" Redirect go-ethereum's logs to cosmos-sdk logger.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/884",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#884"),t("OutboundLink")],1),e._v(" Support multiple account types on the EVM "),t("code",[e._v("StateDB")]),e._v(".")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/831",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#831"),t("OutboundLink")],1),e._v(" Fix BaseFee value when height is specified.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/838",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#838"),t("OutboundLink")],1),e._v(" Fix splitting of trace.Memory into 32 chunks.")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/860",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#860"),t("OutboundLink")],1),e._v(" Fix "),t("code",[e._v("eth_getLogs")]),e._v(" when specify blockHash without address/topics, and limit the response size.")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/865",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#865"),t("OutboundLink")],1),e._v(" Fix RPC Filter parameters being ignored")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/871",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#871"),t("OutboundLink")],1),e._v(" Set correct nonce in "),t("code",[e._v("EthCall")]),e._v(" and "),t("code",[e._v("EstimateGas")]),e._v(" grpc query.")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/878",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#878"),t("OutboundLink")],1),e._v(" Workaround to make GetBlock RPC api report correct block gas used.")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/900",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#900"),t("OutboundLink")],1),e._v(" "),t("code",[e._v("newPendingTransactions")]),e._v(" filter return ethereum tx hash.")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/933",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#933"),t("OutboundLink")],1),e._v(" Fix "),t("code",[e._v("newPendingTransactions")]),e._v(" subscription deadlock when a Websocket client exits without unsubscribing and the node errors.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/932",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#932"),t("OutboundLink")],1),e._v(" Fix base fee check logic in state transition.")])]),e._v(" "),t("h2",{attrs:{id:"v0-9-0-2021-12-01"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-9-0-2021-12-01"}},[e._v("#")]),e._v(" [v0.9.0] - 2021-12-01")]),e._v(" "),t("h3",{attrs:{id:"state-machine-breaking-10"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#state-machine-breaking-10"}},[e._v("#")]),e._v(" State Machine Breaking")]),e._v(" "),t("ul",[t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/802",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#802"),t("OutboundLink")],1),e._v(" Clear access list for each transaction")])]),e._v(" "),t("h3",{attrs:{id:"improvements-13"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#improvements-13"}},[e._v("#")]),e._v(" Improvements")]),e._v(" "),t("ul",[t("li",[e._v("(app) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/794",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#794"),t("OutboundLink")],1),e._v(" Setup in-place store migrators.")]),e._v(" "),t("li",[e._v("(ci) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/784",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#784"),t("OutboundLink")],1),e._v(" Enable automatic backport of PRs.")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/786",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#786"),t("OutboundLink")],1),e._v(" Improve error message of "),t("code",[e._v("SendTransaction")]),e._v("/"),t("code",[e._v("SendRawTransaction")]),e._v(" JSON-RPC APIs.")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/810",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#810"),t("OutboundLink")],1),e._v(" Optimize tx index lookup in web3 rpc")])]),e._v(" "),t("h3",{attrs:{id:"bug-fixes-13"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bug-fixes-13"}},[e._v("#")]),e._v(" Bug Fixes")]),e._v(" "),t("ul",[t("li",[e._v("(license) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/800",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#800"),t("OutboundLink")],1),e._v(" Re-license project to "),t("a",{attrs:{href:"https://choosealicense.com/licenses/lgpl-3.0/#",target:"_blank",rel:"noopener noreferrer"}},[e._v("LGPLv3"),t("OutboundLink")],1),e._v(" to comply with go-ethereum.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/794",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#794"),t("OutboundLink")],1),e._v(" Register EVM gRPC "),t("code",[e._v("Msg")]),e._v(" server.")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/781",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#781"),t("OutboundLink")],1),e._v(" Fix get block invalid transactions filter.")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/782",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#782"),t("OutboundLink")],1),e._v(" Fix wrong block gas limit returned by JSON-RPC.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/798",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#798"),t("OutboundLink")],1),e._v(" Fix the semantic of "),t("code",[e._v("ForEachStorage")]),e._v(" callback's return value")])]),e._v(" "),t("h2",{attrs:{id:"v0-8-1-2021-11-23"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-8-1-2021-11-23"}},[e._v("#")]),e._v(" [v0.8.1] - 2021-11-23")]),e._v(" "),t("h3",{attrs:{id:"bug-fixes-14"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bug-fixes-14"}},[e._v("#")]),e._v(" Bug Fixes")]),e._v(" "),t("ul",[t("li",[e._v("(feemarket) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/770",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#770"),t("OutboundLink")],1),e._v(" Enable fee market (EIP1559) by default.")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/769",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#769"),t("OutboundLink")],1),e._v(" Fix default Ethereum signer for JSON-RPC.")])]),e._v(" "),t("h2",{attrs:{id:"v0-8-0-2021-11-17"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-8-0-2021-11-17"}},[e._v("#")]),e._v(" [v0.8.0] - 2021-11-17")]),e._v(" "),t("h3",{attrs:{id:"state-machine-breaking-11"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#state-machine-breaking-11"}},[e._v("#")]),e._v(" State Machine Breaking")]),e._v(" "),t("ul",[t("li",[e._v("(evm, ante) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/620",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#620"),t("OutboundLink")],1),e._v(" Add fee market field to EVM "),t("code",[e._v("Keeper")]),e._v(" and "),t("code",[e._v("AnteHandler")]),e._v(".")]),e._v(" "),t("li",[e._v("(all) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/231",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#231"),t("OutboundLink")],1),e._v(" Bump go-ethereum version to "),t("a",{attrs:{href:"https://github.com/ethereum/go-ethereum/releases/tag/v1.10.9",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("v1.10.9")]),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("(ante) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/703",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#703"),t("OutboundLink")],1),e._v(" Fix some fields in transaction are not authenticated by signature.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/751",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#751"),t("OutboundLink")],1),e._v(" don't revert gas refund logic when transaction reverted")])]),e._v(" "),t("h3",{attrs:{id:"features-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#features-2"}},[e._v("#")]),e._v(" Features")]),e._v(" "),t("ul",[t("li",[e._v("(rpc, evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/673",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#673"),t("OutboundLink")],1),e._v(" Use tendermint events to store fee market basefee.")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/624",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#624"),t("OutboundLink")],1),e._v(" Implement new JSON-RPC endpoints from latest geth version")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/662",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#662"),t("OutboundLink")],1),e._v(" Disable basefee for non london blocks")]),e._v(" "),t("li",[e._v("(cmd) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/712",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#712"),t("OutboundLink")],1),e._v(" add tx cli to build evm transaction")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/733",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#733"),t("OutboundLink")],1),e._v(" add JSON_RPC endpoint "),t("code",[e._v("personal_unpair")])]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/734",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#734"),t("OutboundLink")],1),e._v(" add JSON_RPC endpoint "),t("code",[e._v("eth_feeHistory")])]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/740",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#740"),t("OutboundLink")],1),e._v(" add JSON_RPC endpoint "),t("code",[e._v("personal_initializeWallet")])]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/743",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#743"),t("OutboundLink")],1),e._v(" add JSON_RPC endpoint "),t("code",[e._v("debug_traceBlockByHash")])]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/748",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#748"),t("OutboundLink")],1),e._v(" add JSON_RPC endpoint "),t("code",[e._v("personal_listWallets")])]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/754",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#754"),t("OutboundLink")],1),e._v(" add JSON_RPC endpoint "),t("code",[e._v("debug_intermediateRoots")])])]),e._v(" "),t("h3",{attrs:{id:"bug-fixes-15"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bug-fixes-15"}},[e._v("#")]),e._v(" Bug Fixes")]),e._v(" "),t("ul",[t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/746",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#746"),t("OutboundLink")],1),e._v(" Set EVM debugging based on tracer configuration.")]),e._v(" "),t("li",[e._v("(app,cli) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/725",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#725"),t("OutboundLink")],1),e._v(" Fix cli-config for  "),t("code",[e._v("keys")]),e._v(" command.")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/727",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#727"),t("OutboundLink")],1),e._v(" Decode raw transaction using RLP.")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/661",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#661"),t("OutboundLink")],1),e._v(" Fix OOM bug when creating too many filters using JSON-RPC.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/660",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#660"),t("OutboundLink")],1),e._v(" Fix "),t("code",[e._v("nil")]),e._v(" pointer panic in "),t("code",[e._v("ApplyNativeMessage")]),e._v(".")]),e._v(" "),t("li",[e._v("(evm, test) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/649",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#649"),t("OutboundLink")],1),e._v(" Test DynamicFeeTx.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/702",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#702"),t("OutboundLink")],1),e._v(" Fix panic in web3 RPC handlers")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/720",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#720"),t("OutboundLink")],1),e._v(" Fix "),t("code",[e._v("debug_traceTransaction")]),e._v(" failure")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/741",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#741"),t("OutboundLink")],1),e._v(" Fix "),t("code",[e._v("eth_getBlockByNumberAndHash")]),e._v(" return with non eth txs")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/743",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#743"),t("OutboundLink")],1),e._v(" Fix debug JSON RPC handler crash on non-existing block")])]),e._v(" "),t("h3",{attrs:{id:"improvements-14"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#improvements-14"}},[e._v("#")]),e._v(" Improvements")]),e._v(" "),t("ul",[t("li",[e._v("(tests) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/704",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#704"),t("OutboundLink")],1),e._v(" Introduce E2E testing framework for clients")]),e._v(" "),t("li",[e._v("(deps) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/737",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#737"),t("OutboundLink")],1),e._v(" Bump ibc-go to "),t("a",{attrs:{href:"https://github.com/cosmos/ibc-go/releases/tag/v2.0.0",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("v2.0.0")]),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/671",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#671"),t("OutboundLink")],1),e._v(" Don't pass base fee externally for "),t("code",[e._v("EthCall")]),e._v("/"),t("code",[e._v("EthEstimateGas")]),e._v(" apis.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/674",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#674"),t("OutboundLink")],1),e._v(" Refactor "),t("code",[e._v("ApplyMessage")]),e._v(", remove\n"),t("code",[e._v("ApplyNativeMessage")]),e._v(".")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/714",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#714"),t("OutboundLink")],1),e._v(" remove "),t("code",[e._v("MsgEthereumTx")]),e._v(" support in "),t("code",[e._v("TxConfig")])])]),e._v(" "),t("h2",{attrs:{id:"v0-7-2-2021-10-24"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-7-2-2021-10-24"}},[e._v("#")]),e._v(" [v0.7.2] - 2021-10-24")]),e._v(" "),t("h3",{attrs:{id:"improvements-15"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#improvements-15"}},[e._v("#")]),e._v(" Improvements")]),e._v(" "),t("ul",[t("li",[e._v("(deps) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/692",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#692"),t("OutboundLink")],1),e._v(" Bump Cosmos SDK version to "),t("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/releases/tag/v0.44.3",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("v0.44.3")]),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/679",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#679"),t("OutboundLink")],1),e._v(" Fix file close handle.")]),e._v(" "),t("li",[e._v("(deps) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/668",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#668"),t("OutboundLink")],1),e._v(" Bump Tendermint version to "),t("a",{attrs:{href:"https://github.com/cometbft/cometbft/releases/tag/v0.34.14",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("v0.34.14")]),t("OutboundLink")],1),e._v(".")])]),e._v(" "),t("h3",{attrs:{id:"bug-fixes-16"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bug-fixes-16"}},[e._v("#")]),e._v(" Bug Fixes")]),e._v(" "),t("ul",[t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/issues/667",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#667"),t("OutboundLink")],1),e._v(" Fix "),t("code",[e._v("ExpandHome")]),e._v(" restrictions bypass")])]),e._v(" "),t("h2",{attrs:{id:"v0-7-1-2021-10-08"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-7-1-2021-10-08"}},[e._v("#")]),e._v(" [v0.7.1] - 2021-10-08")]),e._v(" "),t("h3",{attrs:{id:"bug-fixes-17"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bug-fixes-17"}},[e._v("#")]),e._v(" Bug Fixes")]),e._v(" "),t("ul",[t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/650",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#650"),t("OutboundLink")],1),e._v(" Fix panic when flattening the cache context in case transaction is reverted.")]),e._v(" "),t("li",[e._v("(rpc, test) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/608",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#608"),t("OutboundLink")],1),e._v(" Fix rpc test.")])]),e._v(" "),t("h2",{attrs:{id:"v0-7-0-2021-10-07"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-7-0-2021-10-07"}},[e._v("#")]),e._v(" [v0.7.0] - 2021-10-07")]),e._v(" "),t("h3",{attrs:{id:"api-breaking-8"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#api-breaking-8"}},[e._v("#")]),e._v(" API Breaking")]),e._v(" "),t("ul",[t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/issues/400",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#400"),t("OutboundLink")],1),e._v(" Restructure JSON-RPC directory and rename server config")])]),e._v(" "),t("h3",{attrs:{id:"improvements-16"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#improvements-16"}},[e._v("#")]),e._v(" Improvements")]),e._v(" "),t("ul",[t("li",[e._v("(deps) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/621",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#621"),t("OutboundLink")],1),e._v(" Bump IBC-go to "),t("a",{attrs:{href:"https://github.com/cosmos/ibc-go/releases/tag/v1.2.1",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("v1.2.1")]),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/613",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#613"),t("OutboundLink")],1),e._v(" Refactor "),t("code",[e._v("traceTx")])]),e._v(" "),t("li",[e._v("(deps) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/610",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#610"),t("OutboundLink")],1),e._v(" Bump Cosmos SDK to "),t("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/releases/tag/v0.44.1",target:"_blank",rel:"noopener noreferrer"}},[e._v("v0.44.1"),t("OutboundLink")],1),e._v(".")])]),e._v(" "),t("h3",{attrs:{id:"bug-fixes-18"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bug-fixes-18"}},[e._v("#")]),e._v(" Bug Fixes")]),e._v(" "),t("ul",[t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/issues/642",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#642"),t("OutboundLink")],1),e._v(" Fix "),t("code",[e._v("eth_getLogs")]),e._v(" when string is specified in filter's from or to fields")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/issues/616",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#616"),t("OutboundLink")],1),e._v(" Fix halt on deeply nested stack of cache context. Stack is now flattened before iterating over the tx logs.")]),e._v(" "),t("li",[e._v("(rpc, evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/issues/614",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#614"),t("OutboundLink")],1),e._v(" Use JSON for (un)marshaling tx "),t("code",[e._v("Log")]),e._v("s from events.")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/611",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#611"),t("OutboundLink")],1),e._v(" Fix panic on JSON-RPC when querying for an invalid block height.")]),e._v(" "),t("li",[e._v("(cmd) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/483",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#483"),t("OutboundLink")],1),e._v(" Use config values on genesis accounts.")])]),e._v(" "),t("h2",{attrs:{id:"v0-6-0-2021-09-29"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-6-0-2021-09-29"}},[e._v("#")]),e._v(" [v0.6.0] - 2021-09-29")]),e._v(" "),t("h3",{attrs:{id:"state-machine-breaking-12"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#state-machine-breaking-12"}},[e._v("#")]),e._v(" State Machine Breaking")]),e._v(" "),t("ul",[t("li",[e._v("(app) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/476",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#476"),t("OutboundLink")],1),e._v(" Update Bech32 HRP to "),t("code",[e._v("ethm")]),e._v(".")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/556",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#556"),t("OutboundLink")],1),e._v(" Remove tx logs and block bloom from chain state")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/590",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#590"),t("OutboundLink")],1),e._v(" Contract storage key is not hashed anymore")])]),e._v(" "),t("h3",{attrs:{id:"api-breaking-9"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#api-breaking-9"}},[e._v("#")]),e._v(" API Breaking")]),e._v(" "),t("ul",[t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/469",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#469"),t("OutboundLink")],1),e._v(" Deprecate "),t("code",[e._v("YoloV3Block")]),e._v(" and "),t("code",[e._v("EWASMBlock")]),e._v(" from "),t("code",[e._v("ChainConfig")])])]),e._v(" "),t("h3",{attrs:{id:"features-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#features-3"}},[e._v("#")]),e._v(" Features")]),e._v(" "),t("ul",[t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/469",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#469"),t("OutboundLink")],1),e._v(" Support "),t("a",{attrs:{href:"https://eips.ethereum.org/EIPS/eip-1559",target:"_blank",rel:"noopener noreferrer"}},[e._v("EIP-1559"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/417",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#417"),t("OutboundLink")],1),e._v(" Add "),t("code",[e._v("EvmHooks")]),e._v(" for tx post-processing")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/506",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#506"),t("OutboundLink")],1),e._v(" Support for "),t("code",[e._v("debug_traceTransaction")]),e._v(" RPC endpoint")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/555",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#555"),t("OutboundLink")],1),e._v(" Support for "),t("code",[e._v("debug_traceBlockByNumber")]),e._v(" RPC endpoint")])]),e._v(" "),t("h3",{attrs:{id:"bug-fixes-19"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bug-fixes-19"}},[e._v("#")]),e._v(" Bug Fixes")]),e._v(" "),t("ul",[t("li",[e._v("(rpc, server) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/600",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#600"),t("OutboundLink")],1),e._v(" Add TLS configuration for websocket API")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/598",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#598"),t("OutboundLink")],1),e._v(" Check truncation when creating a "),t("code",[e._v("BlockNumber")]),e._v(" from "),t("code",[e._v("big.Int")])]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/597",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#597"),t("OutboundLink")],1),e._v(" Check for "),t("code",[e._v("uint64")]),e._v(" -> "),t("code",[e._v("int64")]),e._v(" block height overflow on "),t("code",[e._v("GetHashFn")])]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/579",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#579"),t("OutboundLink")],1),e._v(" Update "),t("code",[e._v("DeriveChainID")]),e._v(" function to handle "),t("code",[e._v("v")]),e._v(" signature values "),t("code",[e._v("< 35")]),e._v(".")]),e._v(" "),t("li",[e._v("(encoding) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/478",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#478"),t("OutboundLink")],1),e._v(" Register "),t("code",[e._v("Evidence")]),e._v(" to amino codec.")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/481",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#478"),t("OutboundLink")],1),e._v(" Getting the node configuration when calling the "),t("code",[e._v("miner")]),e._v(" rpc methods.")]),e._v(" "),t("li",[e._v("(cli) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/561",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#561"),t("OutboundLink")],1),e._v(" "),t("code",[e._v("Export")]),e._v(" and "),t("code",[e._v("Start")]),e._v(" commands now use the same home directory.")])]),e._v(" "),t("h3",{attrs:{id:"improvements-17"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#improvements-17"}},[e._v("#")]),e._v(" Improvements")]),e._v(" "),t("ul",[t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/461",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#461"),t("OutboundLink")],1),e._v(" Increase performance of "),t("code",[e._v("StateDB")]),e._v(" transaction log storage (r/w).")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/566",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#566"),t("OutboundLink")],1),e._v(" Introduce "),t("code",[e._v("stateErr")]),e._v(" store in "),t("code",[e._v("StateDB")]),e._v(" to avoid meaningless operations if any error happened before")]),e._v(" "),t("li",[e._v("(rpc, evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/587",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#587"),t("OutboundLink")],1),e._v(" Apply bloom filter when query ethlogs with range of blocks")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/586",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#586"),t("OutboundLink")],1),e._v(" Benchmark evm keeper")])]),e._v(" "),t("h2",{attrs:{id:"v0-5-0-2021-08-20"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-5-0-2021-08-20"}},[e._v("#")]),e._v(" [v0.5.0] - 2021-08-20")]),e._v(" "),t("h3",{attrs:{id:"state-machine-breaking-13"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#state-machine-breaking-13"}},[e._v("#")]),e._v(" State Machine Breaking")]),e._v(" "),t("ul",[t("li",[e._v("(app, rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/447",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#447"),t("OutboundLink")],1),e._v(" Chain ID format has been changed from "),t("code",[e._v("<identifier>-<epoch>")]),e._v(" to "),t("code",[e._v("<identifier>_<EIP155_number>-<epoch>")]),e._v("\nin order to clearly distinguish permanent vs impermanent components.")]),e._v(" "),t("li",[e._v("(app, evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/434",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#434"),t("OutboundLink")],1),e._v(" EVM "),t("code",[e._v("Keeper")]),e._v(" struct and "),t("code",[e._v("NewEVM")]),e._v(" function now have a new "),t("code",[e._v("trace")]),e._v(" field to define\nthe Tracer type used to collect execution traces from the EVM transaction execution.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/issues/175",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#175"),t("OutboundLink")],1),e._v(" The msg "),t("code",[e._v("TxData")]),e._v(" field is now represented as a "),t("code",[e._v("*proto.Any")]),e._v(".")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/84",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#84"),t("OutboundLink")],1),e._v(" Remove "),t("code",[e._v("journal")]),e._v(", "),t("code",[e._v("CommitStateDB")]),e._v(" and "),t("code",[e._v("stateObjects")]),e._v(".")]),e._v(" "),t("li",[e._v("(rpc, evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/81",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#81"),t("OutboundLink")],1),e._v(" Remove tx "),t("code",[e._v("Receipt")]),e._v(" from store and replace it with fields obtained from the Tendermint RPC client.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/issues/72",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#72"),t("OutboundLink")],1),e._v(" Update "),t("code",[e._v("AccessList")]),e._v(" to use "),t("code",[e._v("TransientStore")]),e._v(" instead of map.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/issues/68",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#68"),t("OutboundLink")],1),e._v(" Replace block hash storage map to use staking "),t("code",[e._v("HistoricalInfo")]),e._v(".")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/276",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#276"),t("OutboundLink")],1),e._v(" Vm errors don't result in cosmos tx failure, just\ndifferent tx state and events.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/issues/342",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#342"),t("OutboundLink")],1),e._v(" Don't clear balance when resetting the account.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/334",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#334"),t("OutboundLink")],1),e._v(" Log index changed to the index in block rather than\ntx.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/399",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#399"),t("OutboundLink")],1),e._v(" Exception in sub-message call reverts the call if it's not propagated.")])]),e._v(" "),t("h3",{attrs:{id:"api-breaking-10"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#api-breaking-10"}},[e._v("#")]),e._v(" API Breaking")]),e._v(" "),t("ul",[t("li",[e._v("(proto) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/448",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#448"),t("OutboundLink")],1),e._v(" Bump version for all Ethermint messages to "),t("code",[e._v("v1")])]),e._v(" "),t("li",[e._v("(server) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/434",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#434"),t("OutboundLink")],1),e._v(" "),t("code",[e._v("evm-rpc")]),e._v(" flags and app config have been renamed to "),t("code",[e._v("json-rpc")]),e._v(".")]),e._v(" "),t("li",[e._v("(proto, evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/issues/207",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#207"),t("OutboundLink")],1),e._v(" Replace "),t("code",[e._v("big.Int")]),e._v(" in favor of "),t("code",[e._v("sdk.Int")]),e._v(" for "),t("code",[e._v("TxData")]),e._v(" fields")]),e._v(" "),t("li",[e._v("(proto, evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/81",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#81"),t("OutboundLink")],1),e._v(" gRPC Query and Tx service changes:\n"),t("ul",[t("li",[e._v("The "),t("code",[e._v("TxReceipt")]),e._v(", "),t("code",[e._v("TxReceiptsByBlockHeight")]),e._v(" endpoints have been removed from the Query service.")]),e._v(" "),t("li",[e._v("The "),t("code",[e._v("ContractAddress")]),e._v(", "),t("code",[e._v("Bloom")]),e._v(" have been removed from the "),t("code",[e._v("MsgEthereumTxResponse")]),e._v(" and the\nresponse now contains the ethereum-formatted "),t("code",[e._v("Hash")]),e._v(" in hex format.")])])]),e._v(" "),t("li",[e._v("(eth) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/845",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#845"),t("OutboundLink")],1),e._v(" The "),t("code",[e._v("eth")]),e._v(" namespace must be included in the list of API's as default to run the rpc server without error.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/202",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#202"),t("OutboundLink")],1),e._v(" Web3 api "),t("code",[e._v("SendTransaction")]),e._v("/"),t("code",[e._v("SendRawTransaction")]),e._v(" returns ethereum compatible transaction hash, and query api "),t("code",[e._v("GetTransaction*")]),e._v(" also accept that.")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/258",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#258"),t("OutboundLink")],1),e._v(" Return empty "),t("code",[e._v("BloomFilter")]),e._v(" instead of throwing an error when it cannot be found ("),t("code",[e._v("nil")]),e._v(" or empty).")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/321",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#277"),t("OutboundLink")],1),e._v(" Fix "),t("code",[e._v("BloomFilter")]),e._v(" response.")])]),e._v(" "),t("h3",{attrs:{id:"improvements-18"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#improvements-18"}},[e._v("#")]),e._v(" Improvements")]),e._v(" "),t("ul",[t("li",[e._v("(client) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/issues/450",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#450"),t("OutboundLink")],1),e._v(" Add EIP55 hex address support on "),t("code",[e._v("debug addr")]),e._v(" command.")]),e._v(" "),t("li",[e._v("(server) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/343",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#343"),t("OutboundLink")],1),e._v(" Define a wrap tendermint logger "),t("code",[e._v("Handler")]),e._v(" go-ethereum's "),t("code",[e._v("root")]),e._v(" logger.")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/457",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#457"),t("OutboundLink")],1),e._v(" Configure RPC gas cap through app config.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/434",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#434"),t("OutboundLink")],1),e._v(" Support different "),t("code",[e._v("Tracer")]),e._v(" types for the EVM.")]),e._v(" "),t("li",[e._v("(deps) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/427",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#427"),t("OutboundLink")],1),e._v(" Bump ibc-go to "),t("a",{attrs:{href:"https://github.com/cosmos/ibc-go/releases/tag/v1.0.0",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("v1.0.0")]),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("(gRPC) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/239",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#239"),t("OutboundLink")],1),e._v(" Query "),t("code",[e._v("ChainConfig")]),e._v(" via gRPC.")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/181",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#181"),t("OutboundLink")],1),e._v(" Use evm denomination for params on tx fee.")]),e._v(" "),t("li",[e._v("(deps) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/423",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#423"),t("OutboundLink")],1),e._v(" Bump Cosmos SDK and Tendermint versions to "),t("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/releases/tag/v0.43.0",target:"_blank",rel:"noopener noreferrer"}},[e._v("v0.43.0"),t("OutboundLink")],1),e._v(" and "),t("a",{attrs:{href:"https://github.com/cometbft/cometbft/releases/tag/v0.34.11",target:"_blank",rel:"noopener noreferrer"}},[e._v("v0.34.11"),t("OutboundLink")],1),e._v(", respectively.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/issues/66",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#66"),t("OutboundLink")],1),e._v(" Support legacy transaction types for signing.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/24",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#24"),t("OutboundLink")],1),e._v(" Implement metrics for "),t("code",[e._v("MsgEthereumTx")]),e._v(", state transitions, "),t("code",[e._v("BeginBlock")]),e._v(" and "),t("code",[e._v("EndBlock")]),e._v(".")]),e._v(" "),t("li",[e._v("(rpc)  "),t("a",{attrs:{href:"https://github.com/planq-network/planq/issues/124",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#124"),t("OutboundLink")],1),e._v(" Implement "),t("code",[e._v("txpool_content")]),e._v(", "),t("code",[e._v("txpool_inspect")]),e._v(" and "),t("code",[e._v("txpool_status")]),e._v(" RPC methods")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/153",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#112"),t("OutboundLink")],1),e._v(" Fix "),t("code",[e._v("eth_coinbase")]),e._v(" to return the ethereum address of the validator")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/issues/176",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#176"),t("OutboundLink")],1),e._v(" Support fetching pending nonce")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/272",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#272"),t("OutboundLink")],1),e._v(" do binary search to estimate gas accurately")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/313",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#313"),t("OutboundLink")],1),e._v(" Implement internal debug namespace (Not including logger functions nor traces).")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/349",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#349"),t("OutboundLink")],1),e._v(" Implement configurable JSON-RPC APIs to manage enabled namespaces.")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/377",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#377"),t("OutboundLink")],1),e._v(" Implement "),t("code",[e._v("miner_")]),e._v(" namespace. "),t("code",[e._v("miner_setEtherbase")]),e._v(" and "),t("code",[e._v("miner_setGasPrice")]),e._v(" are working as intended. All the other calls are not applicable and return "),t("code",[e._v("unsupported")]),e._v(".")]),e._v(" "),t("li",[e._v("(eth) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/issues/460",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#460"),t("OutboundLink")],1),e._v(" Add support for EIP-1898.")])]),e._v(" "),t("h3",{attrs:{id:"bug-fixes-20"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bug-fixes-20"}},[e._v("#")]),e._v(" Bug Fixes")]),e._v(" "),t("ul",[t("li",[e._v("(keys) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/346",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#346"),t("OutboundLink")],1),e._v(" Fix "),t("code",[e._v("keys add")]),e._v(" command with "),t("code",[e._v("--ledger")]),e._v(" flag for the "),t("code",[e._v("secp256k1")]),e._v(" signing algorithm.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/291",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#291"),t("OutboundLink")],1),e._v(" Use block proposer address (validator operator) for "),t("code",[e._v("COINBASE")]),e._v(" opcode.")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/81",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#81"),t("OutboundLink")],1),e._v(" Fix transaction hashing and decoding on "),t("code",[e._v("eth_sendTransaction")]),e._v(".")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/planq-network/planq/pull/45",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#45"),t("OutboundLink")],1),e._v(" Use "),t("code",[e._v("EmptyUncleHash")]),e._v(" and "),t("code",[e._v("EmptyRootHash")]),e._v(" for empty ethereum "),t("code",[e._v("Header")]),e._v(" fields.")])]),e._v(" "),t("h2",{attrs:{id:"v0-4-1-2021-03-01"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-4-1-2021-03-01"}},[e._v("#")]),e._v(" [v0.4.1] - 2021-03-01")]),e._v(" "),t("h3",{attrs:{id:"api-breaking-11"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#api-breaking-11"}},[e._v("#")]),e._v(" API Breaking")]),e._v(" "),t("ul",[t("li",[e._v("(faucet) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/678",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#678"),t("OutboundLink")],1),e._v(" Faucet module has been removed in favor of client libraries such as "),t("a",{attrs:{href:"https://github.com/cosmos/cosmjs/tree/master/packages/faucet",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("@cosmjs/faucet")]),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/670",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#670"),t("OutboundLink")],1),e._v(" Migrate types to the ones defined by the protobuf messages, which are required for the stargate release.")])]),e._v(" "),t("h3",{attrs:{id:"bug-fixes-21"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bug-fixes-21"}},[e._v("#")]),e._v(" Bug Fixes")]),e._v(" "),t("ul",[t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/799",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#799"),t("OutboundLink")],1),e._v(" Fix wrong precision in calculation of gas fee.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/760",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#760"),t("OutboundLink")],1),e._v(" Fix Failed to call function EstimateGas.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/767",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#767"),t("OutboundLink")],1),e._v(" Fix error of timeout when using Truffle to deploy contract.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/751",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#751"),t("OutboundLink")],1),e._v(" Fix misused method to calculate block hash in evm related function.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/721",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#721"),t("OutboundLink")],1),e._v(" Fix mismatch block hash in rpc response when use eht.getBlock.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/730",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#730"),t("OutboundLink")],1),e._v(" Fix 'EIP2028' not open when Istanbul version has been enabled.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/749",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#749"),t("OutboundLink")],1),e._v(" Fix panic in "),t("code",[e._v("AnteHandler")]),e._v(" when gas price larger than 100000")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/747",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#747"),t("OutboundLink")],1),e._v(" Fix format errors in String() of QueryETHLogs")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/742",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#742"),t("OutboundLink")],1),e._v(" Add parameter check for evm query func.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/687",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#687"),t("OutboundLink")],1),e._v(" Fix nonce check to explicitly check for the correct nonce, rather than a simple 'greater than' comparison.")]),e._v(" "),t("li",[e._v("(api) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/687",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#687"),t("OutboundLink")],1),e._v(" Returns error for a transaction with an incorrect nonce.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/674",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#674"),t("OutboundLink")],1),e._v(" Reset all cache after account data has been committed in "),t("code",[e._v("EndBlock")]),e._v(" to make sure every node state consistent.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/672",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#672"),t("OutboundLink")],1),e._v(" Fix panic of "),t("code",[e._v("wrong Block.Header.AppHash")]),e._v(" when restart a node with snapshot.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/775",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#775"),t("OutboundLink")],1),e._v(" MisUse of headHash as blockHash when create EVM context.")])]),e._v(" "),t("h3",{attrs:{id:"features-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#features-4"}},[e._v("#")]),e._v(" Features")]),e._v(" "),t("ul",[t("li",[e._v("(api) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/821",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#821"),t("OutboundLink")],1),e._v(" Individually enable the api modules. Will be implemented in the latest version of ethermint with the upcoming stargate upgrade.")])]),e._v(" "),t("h3",{attrs:{id:"features-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#features-5"}},[e._v("#")]),e._v(" Features")]),e._v(" "),t("ul",[t("li",[e._v("(api) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/825",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#825"),t("OutboundLink")],1),e._v(" Individually enable the api modules. Will be implemented in the latest version of ethermint with the upcoming stargate upgrade.")])]),e._v(" "),t("h2",{attrs:{id:"v0-4-0-2020-12-15"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-4-0-2020-12-15"}},[e._v("#")]),e._v(" [v0.4.0] - 2020-12-15")]),e._v(" "),t("h3",{attrs:{id:"api-breaking-12"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#api-breaking-12"}},[e._v("#")]),e._v(" API Breaking")]),e._v(" "),t("ul",[t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/661",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#661"),t("OutboundLink")],1),e._v(" "),t("code",[e._v("Balance")]),e._v(" field has been removed from the evm module's "),t("code",[e._v("GenesisState")]),e._v(".")])]),e._v(" "),t("h3",{attrs:{id:"features-6"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#features-6"}},[e._v("#")]),e._v(" Features")]),e._v(" "),t("ul",[t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/571",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#571"),t("OutboundLink")],1),e._v(" Add pending queries to JSON-RPC calls. This allows for the querying of pending transactions and other relevant information that pertains to the pending state:\n"),t("ul",[t("li",[t("code",[e._v("eth_getBalance")])]),e._v(" "),t("li",[t("code",[e._v("eth_getTransactionCount")])]),e._v(" "),t("li",[t("code",[e._v("eth_getBlockTransactionCountByNumber")])]),e._v(" "),t("li",[t("code",[e._v("eth_getBlockByNumber")])]),e._v(" "),t("li",[t("code",[e._v("eth_getTransactionByHash")])]),e._v(" "),t("li",[t("code",[e._v("eth_getTransactionByBlockNumberAndIndex")])]),e._v(" "),t("li",[t("code",[e._v("eth_sendTransaction")]),e._v(" - the nonce will automatically update to its pending nonce (when none is explicitly provided)")])])])]),e._v(" "),t("h3",{attrs:{id:"improvements-19"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#improvements-19"}},[e._v("#")]),e._v(" Improvements")]),e._v(" "),t("ul",[t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/661",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#661"),t("OutboundLink")],1),e._v(" Add invariant check for account balance and account nonce.")]),e._v(" "),t("li",[e._v("(deps) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/654",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#654"),t("OutboundLink")],1),e._v(" Bump go-ethereum version to "),t("a",{attrs:{href:"https://github.com/ethereum/go-ethereum/releases/tag/v1.9.25",target:"_blank",rel:"noopener noreferrer"}},[e._v("v1.9.25"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/627",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#627"),t("OutboundLink")],1),e._v(" Add extra EIPs parameter to apply custom EVM jump tables.")])]),e._v(" "),t("h3",{attrs:{id:"bug-fixes-22"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bug-fixes-22"}},[e._v("#")]),e._v(" Bug Fixes")]),e._v(" "),t("ul",[t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/661",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#661"),t("OutboundLink")],1),e._v(" Set nonce to the EVM account on genesis initialization.")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/648",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#648"),t("OutboundLink")],1),e._v(" Fix block cumulative gas used value.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/621",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#621"),t("OutboundLink")],1),e._v(" EVM "),t("code",[e._v("GenesisAccount")]),e._v(" fields now share the same format as the auth module "),t("code",[e._v("Account")]),e._v(".")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/618",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#618"),t("OutboundLink")],1),e._v(" Add missing EVM "),t("code",[e._v("Context")]),e._v(" "),t("code",[e._v("GetHash")]),e._v(" field that retrieves a the header hash from a given block height.")]),e._v(" "),t("li",[e._v("(app) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/617",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#617"),t("OutboundLink")],1),e._v(" Fix genesis export functionality.")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/574",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#574"),t("OutboundLink")],1),e._v(" Fix outdated version from "),t("code",[e._v("eth_protocolVersion")]),e._v(".")])]),e._v(" "),t("h2",{attrs:{id:"v0-3-1-2020-11-24"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-3-1-2020-11-24"}},[e._v("#")]),e._v(" [v0.3.1] - 2020-11-24")]),e._v(" "),t("h3",{attrs:{id:"improvements-20"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#improvements-20"}},[e._v("#")]),e._v(" Improvements")]),e._v(" "),t("ul",[t("li",[e._v("(deps) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/615",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#615"),t("OutboundLink")],1),e._v(" Bump Cosmos SDK version to "),t("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/tag/v0.39.2",target:"_blank",rel:"noopener noreferrer"}},[e._v("v0.39.2"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("(deps) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/610",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#610"),t("OutboundLink")],1),e._v(" Update Go dependency to 1.15+.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/603",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#603"),t("OutboundLink")],1),e._v(" Add state transition params that enable or disable the EVM "),t("code",[e._v("Call")]),e._v(" and "),t("code",[e._v("Create")]),e._v(" operations.")]),e._v(" "),t("li",[e._v("(deps) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/602",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#602"),t("OutboundLink")],1),e._v(" Bump tendermint version to "),t("a",{attrs:{href:"https://github.com/cometbft/cometbft/releases/tag/v0.33.9",target:"_blank",rel:"noopener noreferrer"}},[e._v("v0.33.9"),t("OutboundLink")],1)])]),e._v(" "),t("h3",{attrs:{id:"bug-fixes-23"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bug-fixes-23"}},[e._v("#")]),e._v(" Bug Fixes")]),e._v(" "),t("ul",[t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/613",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#613"),t("OutboundLink")],1),e._v(" Fix potential deadlock caused if the keyring "),t("code",[e._v("List")]),e._v(" returned an error.")])]),e._v(" "),t("h2",{attrs:{id:"v0-3-0-2020-11-16"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-3-0-2020-11-16"}},[e._v("#")]),e._v(" [v0.3.0] - 2020-11-16")]),e._v(" "),t("h3",{attrs:{id:"api-breaking-13"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#api-breaking-13"}},[e._v("#")]),e._v(" API Breaking")]),e._v(" "),t("ul",[t("li",[e._v("(crypto) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/559",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#559"),t("OutboundLink")],1),e._v(" Refactored crypto package in preparation for the SDK's Stargate release:\n"),t("ul",[t("li",[t("code",[e._v("crypto.PubKeySecp256k1")]),e._v(" and "),t("code",[e._v("crypto.PrivKeySecp256k1")]),e._v(" are now "),t("code",[e._v("ethsecp256k1.PubKey")]),e._v(" and "),t("code",[e._v("ethsecp256k1.PrivKey")]),e._v(", respectively")]),e._v(" "),t("li",[e._v("Moved SDK "),t("code",[e._v("SigningAlgo")]),e._v(" implementation for Ethermint's Secp256k1 key to "),t("code",[e._v("crypto/hd")]),e._v(" package.")])])]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/588",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#588"),t("OutboundLink")],1),e._v(" The "),t("code",[e._v("rpc")]),e._v(" package has been refactored to account for the separation of each\ncorresponding Ethereum API namespace:\n"),t("ul",[t("li",[t("code",[e._v("rpc/namespaces/eth")]),e._v(": "),t("code",[e._v("eth")]),e._v(" namespace. Exposes the "),t("code",[e._v("PublicEthereumAPI")]),e._v(" and the "),t("code",[e._v("PublicFilterAPI")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("rpc/namespaces/personal")]),e._v(": "),t("code",[e._v("personal")]),e._v(" namespace. Exposes the "),t("code",[e._v("PrivateAccountAPI")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("rpc/namespaces/net")]),e._v(": "),t("code",[e._v("net")]),e._v(" namespace. Exposes the "),t("code",[e._v("PublicNetAPI")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("rpc/namespaces/web3")]),e._v(": "),t("code",[e._v("web3")]),e._v(" namespace. Exposes the "),t("code",[e._v("PublicWeb3API")]),e._v(".")])])]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/588",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#588"),t("OutboundLink")],1),e._v(" The EVM transaction CLI has been removed in favor of the JSON-RPC.")])]),e._v(" "),t("h3",{attrs:{id:"improvements-21"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#improvements-21"}},[e._v("#")]),e._v(" Improvements")]),e._v(" "),t("ul",[t("li",[e._v("(deps) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/594",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#594"),t("OutboundLink")],1),e._v(" Bump go-ethereum version to "),t("a",{attrs:{href:"https://github.com/ethereum/go-ethereum/releases/tag/v1.9.24",target:"_blank",rel:"noopener noreferrer"}},[e._v("v1.9.24"),t("OutboundLink")],1)])]),e._v(" "),t("h3",{attrs:{id:"bug-fixes-24"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bug-fixes-24"}},[e._v("#")]),e._v(" Bug Fixes")]),e._v(" "),t("ul",[t("li",[e._v("(ante) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/597",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#597"),t("OutboundLink")],1),e._v(" Fix incorrect fee check on "),t("code",[e._v("AnteHandler")]),e._v(".")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/583",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#583"),t("OutboundLink")],1),e._v(" Fixes incorrect resetting of tx count and block bloom during "),t("code",[e._v("BeginBlock")]),e._v(", as well as gas consumption.")]),e._v(" "),t("li",[e._v("(crypto) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/577",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#577"),t("OutboundLink")],1),e._v(" Fix "),t("code",[e._v("BIP44HDPath")]),e._v(" that did not prepend "),t("code",[e._v("m/")]),e._v(" to the path. This now uses the "),t("code",[e._v("DefaultBaseDerivationPath")]),e._v(" variable from go-ethereum to ensure addresses are consistent.")])]),e._v(" "),t("h2",{attrs:{id:"v0-2-1-2020-09-30"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-2-1-2020-09-30"}},[e._v("#")]),e._v(" [v0.2.1] - 2020-09-30")]),e._v(" "),t("h3",{attrs:{id:"features-7"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#features-7"}},[e._v("#")]),e._v(" Features")]),e._v(" "),t("ul",[t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/552",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#552"),t("OutboundLink")],1),e._v(" Implement Eth Personal namespace "),t("code",[e._v("personal_importRawKey")]),e._v(".")])]),e._v(" "),t("h3",{attrs:{id:"bug-fixes-25"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bug-fixes-25"}},[e._v("#")]),e._v(" Bug fixes")]),e._v(" "),t("ul",[t("li",[e._v("(keys) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/554",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#554"),t("OutboundLink")],1),e._v(" Fix private key derivation.")]),e._v(" "),t("li",[e._v("(app/ante) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/550",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#550"),t("OutboundLink")],1),e._v(" Update ante handler nonce verification to accept any nonce greater than or equal to the expected nonce to allow to successive transactions.")])]),e._v(" "),t("h2",{attrs:{id:"v0-2-0-2020-09-24"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-2-0-2020-09-24"}},[e._v("#")]),e._v(" [v0.2.0] - 2020-09-24")]),e._v(" "),t("h3",{attrs:{id:"state-machine-breaking-14"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#state-machine-breaking-14"}},[e._v("#")]),e._v(" State Machine Breaking")]),e._v(" "),t("ul",[t("li",[e._v("(app) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/540",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#540"),t("OutboundLink")],1),e._v(" Chain identifier's format has been changed to match the Cosmos "),t("code",[e._v("chainID")]),e._v(" "),t("a",{attrs:{href:"https://github.com/ChainAgnostic/CAIPs/blob/master/CAIPs/caip-5.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("standard"),t("OutboundLink")],1),e._v(", which is required for IBC. The epoch number of the ID is used as the EVM "),t("code",[e._v("chainID")]),e._v(".")])]),e._v(" "),t("h3",{attrs:{id:"api-breaking-14"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#api-breaking-14"}},[e._v("#")]),e._v(" API Breaking")]),e._v(" "),t("ul",[t("li",[e._v("(types) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/503",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#503"),t("OutboundLink")],1),e._v(" The "),t("code",[e._v("types.DenomDefault")]),e._v(" constant for "),t("code",[e._v('"aplanq"')]),e._v(" has been renamed to "),t("code",[e._v("types.AttoPhoton")]),e._v(".")])]),e._v(" "),t("h3",{attrs:{id:"improvements-22"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#improvements-22"}},[e._v("#")]),e._v(" Improvements")]),e._v(" "),t("ul",[t("li",[e._v("(types) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/504",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#504"),t("OutboundLink")],1),e._v(" Unmarshal a JSON "),t("code",[e._v("EthAccount")]),e._v(" using an Ethereum hex address in addition to Bech32.")]),e._v(" "),t("li",[e._v("(types) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/503",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#503"),t("OutboundLink")],1),e._v(" Add "),t("code",[e._v("--coin-denom")]),e._v(" flag to testnet command that sets the given coin denomination to SDK and Ethermint parameters.")]),e._v(" "),t("li",[e._v("(types) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/502",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#502"),t("OutboundLink")],1),e._v(" "),t("code",[e._v("EthAccount")]),e._v(" now also exposes the Ethereum hex address in "),t("code",[e._v("string")]),e._v(" format to clients.")]),e._v(" "),t("li",[e._v("(types) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/494",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#494"),t("OutboundLink")],1),e._v(" Update "),t("code",[e._v("EthAccount")]),e._v(" public key JSON type to "),t("code",[e._v("string")]),e._v(".")]),e._v(" "),t("li",[e._v("(app) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/471",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#471"),t("OutboundLink")],1),e._v(" Add "),t("code",[e._v("x/upgrade")]),e._v(" module for managing software updates.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/458",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#458"),t("OutboundLink")],1),e._v(" Define parameter for token denomination used for the EVM module.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/443",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#443"),t("OutboundLink")],1),e._v(" Support custom Ethereum "),t("code",[e._v("ChainConfig")]),e._v(" params.")]),e._v(" "),t("li",[e._v("(types) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/434",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#434"),t("OutboundLink")],1),e._v(" Update default denomination to Atto Photon ("),t("code",[e._v("aphoton")]),e._v(").")]),e._v(" "),t("li",[e._v("(types) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/515",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#515"),t("OutboundLink")],1),e._v(" Update minimum gas price to be 1.")])]),e._v(" "),t("h3",{attrs:{id:"bug-fixes-26"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bug-fixes-26"}},[e._v("#")]),e._v(" Bug Fixes")]),e._v(" "),t("ul",[t("li",[e._v("(ante) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/525",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#525"),t("OutboundLink")],1),e._v(" Add message validation decorator to "),t("code",[e._v("AnteHandler")]),e._v(" for "),t("code",[e._v("MsgEthereumTx")]),e._v(".")]),e._v(" "),t("li",[e._v("(types) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/507",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#507"),t("OutboundLink")],1),e._v(" Fix hardcoded "),t("code",[e._v("aphoton")]),e._v(" on "),t("code",[e._v("EthAccount")]),e._v(" balance getter and setter.")]),e._v(" "),t("li",[e._v("(types) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/501",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#501"),t("OutboundLink")],1),e._v(" Fix bech32 encoding error by using the compressed ethereum secp256k1 public key.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/496",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#496"),t("OutboundLink")],1),e._v(" Fix bugs on "),t("code",[e._v("journal.revert")]),e._v(" and "),t("code",[e._v("CommitStateDB.Copy")]),e._v(".")]),e._v(" "),t("li",[e._v("(types) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/480",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#480"),t("OutboundLink")],1),e._v(" Update "),t("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP44"),t("OutboundLink")],1),e._v(" coin type to "),t("code",[e._v("60")]),e._v(" to satisfy "),t("a",{attrs:{href:"https://github.com/ethereum/EIPs/issues/84",target:"_blank",rel:"noopener noreferrer"}},[e._v("EIP84"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("li",[e._v("(types) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/513",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#513"),t("OutboundLink")],1),e._v(" Fix simulated transaction bug that was causing a consensus error by unintentionally affecting the state.")])]),e._v(" "),t("h2",{attrs:{id:"v0-1-0-2020-08-23"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v0-1-0-2020-08-23"}},[e._v("#")]),e._v(" [v0.1.0] - 2020-08-23")]),e._v(" "),t("h3",{attrs:{id:"improvements-23"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#improvements-23"}},[e._v("#")]),e._v(" Improvements")]),e._v(" "),t("ul",[t("li",[e._v("(sdk) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/386",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#386"),t("OutboundLink")],1),e._v(" Bump Cosmos SDK version to "),t("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/releases/tag/v0.39.1",target:"_blank",rel:"noopener noreferrer"}},[e._v("v0.39.1"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/181",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#181"),t("OutboundLink")],1),e._v(" Updated EVM module to the recommended module structure.")]),e._v(" "),t("li",[e._v("(app) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/186",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#188"),t("OutboundLink")],1),e._v("  Misc cleanup:\n"),t("ul",[t("li",[e._v("(evm) Rename "),t("code",[e._v("EthereumTxMsg")]),e._v(" --\x3e "),t("code",[e._v("MsgEthereumTx")]),e._v(" and "),t("code",[e._v("EmintMsg")]),e._v(" --\x3e "),t("code",[e._v("MsgEthermint")]),e._v(" for consistency with SDK standards")]),e._v(" "),t("li",[e._v("Updated integration and unit tests to use "),t("code",[e._v("PlanqApp")]),e._v(" as testing suite")]),e._v(" "),t("li",[e._v("Use expected "),t("code",[e._v("Keeper")]),e._v(" interface for "),t("code",[e._v("AccountKeeper")])]),e._v(" "),t("li",[e._v("Replaced "),t("code",[e._v("count")]),e._v(" type in keeper with "),t("code",[e._v("int")])]),e._v(" "),t("li",[e._v("Add SDK events for transactions")])])]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/236",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#236"),t("OutboundLink")],1),e._v(" Changes from upgrade:\n"),t("ul",[t("li",[e._v("("),t("code",[e._v("app/ante")]),e._v(") Moved "),t("code",[e._v("AnteHandler")]),e._v(" implementation to "),t("code",[e._v("app/ante")])]),e._v(" "),t("li",[e._v("(keys) Marked "),t("code",[e._v("ExportEthKeyCommand")]),e._v(" as "),t("strong",[e._v("UNSAFE")])]),e._v(" "),t("li",[e._v("(evm) Moved "),t("code",[e._v("BeginBlock")]),e._v(" and "),t("code",[e._v("EndBlock")]),e._v(" to "),t("code",[e._v("x/evm/abci.go")])])])]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/255",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#255"),t("OutboundLink")],1),e._v(" Add missing "),t("code",[e._v("GenesisState")]),e._v(" fields and support "),t("code",[e._v("ExportGenesis")]),e._v(" functionality.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/272",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#272"),t("OutboundLink")],1),e._v(" Add "),t("code",[e._v("Logger")]),e._v(" for evm module.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/317",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#317"),t("OutboundLink")],1),e._v(" "),t("code",[e._v("GenesisAccount")]),e._v(" validation.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/319",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#319"),t("OutboundLink")],1),e._v(" Various evm improvements:\n"),t("ul",[t("li",[e._v("Add transaction "),t("code",[e._v("[]*ethtypes.Logs")]),e._v(" to evm's "),t("code",[e._v("GenesisState")]),e._v(" to persist logs after an upgrade.")]),e._v(" "),t("li",[e._v("Remove evm "),t("code",[e._v("CodeKey")]),e._v(" and "),t("code",[e._v("BlockKey")]),e._v("in favor of a prefix "),t("code",[e._v("Store")]),e._v(".")]),e._v(" "),t("li",[e._v("Set "),t("code",[e._v("BlockBloom")]),e._v(" during "),t("code",[e._v("EndBlock")]),e._v(" instead of "),t("code",[e._v("BeginBlock")]),e._v(".")]),e._v(" "),t("li",[t("code",[e._v("Commit")]),e._v(" state object and "),t("code",[e._v("Finalize")]),e._v(" storage after "),t("code",[e._v("InitGenesis")]),e._v(" setup.")])])]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/325",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#325"),t("OutboundLink")],1),e._v(" "),t("code",[e._v("eth_coinbase")]),e._v(" JSON-RPC query now returns the node's validator address.")])]),e._v(" "),t("h3",{attrs:{id:"features-8"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#features-8"}},[e._v("#")]),e._v(" Features")]),e._v(" "),t("ul",[t("li",[e._v("(build) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/378",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#378"),t("OutboundLink")],1),e._v(" Create multi-node, local, automated testnet setup with "),t("code",[e._v("make localnet-start")]),e._v(".")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/330",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#330"),t("OutboundLink")],1),e._v(" Implement "),t("code",[e._v("PublicFilterAPI")]),e._v("'s "),t("code",[e._v("EventSystem")]),e._v(" which subscribes to Tendermint events upon "),t("code",[e._v("Filter")]),e._v(" creation.")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/231",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#231"),t("OutboundLink")],1),e._v(" Implement "),t("code",[e._v("NewBlockFilter")]),e._v(" in rpc/filters.go which instantiates a polling block filter\n"),t("ul",[t("li",[e._v("Polls for new blocks via "),t("code",[e._v("BlockNumber")]),e._v(" rpc call; if block number changes, it requests the new block via "),t("code",[e._v("GetBlockByNumber")]),e._v(" rpc call and adds it to its internal list of blocks")]),e._v(" "),t("li",[e._v("Update "),t("code",[e._v("uninstallFilter")]),e._v(" and "),t("code",[e._v("getFilterChanges")]),e._v(" accordingly")]),e._v(" "),t("li",[t("code",[e._v("uninstallFilter")]),e._v(" stops the polling goroutine")]),e._v(" "),t("li",[t("code",[e._v("getFilterChanges")]),e._v(" returns the filter's internal list of block hashes and resets it")])])]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/54",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#54"),t("OutboundLink")],1),e._v(", "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/55",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#55"),t("OutboundLink")],1),e._v("\nImplement "),t("code",[e._v("eth_getFilterLogs")]),e._v(" and "),t("code",[e._v("eth_getLogs")]),e._v(":\n"),t("ul",[t("li",[e._v("For a given filter, look through each block for transactions. If there are transactions in the block, get the logs from it, and filter using the filterLogs method")]),e._v(" "),t("li",[t("code",[e._v("eth_getLogs")]),e._v(" and "),t("code",[e._v("eth_getFilterChanges")]),e._v(" for log filters use the same underlying method as "),t("code",[e._v("eth_getFilterLogs")])]),e._v(" "),t("li",[e._v("update "),t("code",[e._v("HandleMsgEthereumTx")]),e._v(" to store logs using the ethereum hash")])])]),e._v(" "),t("li",[e._v("(app) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/187",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#187"),t("OutboundLink")],1),e._v(" Add support for simulations.")])]),e._v(" "),t("h3",{attrs:{id:"bug-fixes-27"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bug-fixes-27"}},[e._v("#")]),e._v(" Bug Fixes")]),e._v(" "),t("ul",[t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/767",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#767"),t("OutboundLink")],1),e._v(" Fix error of timeout when using Truffle to deploy contract.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/751",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#751"),t("OutboundLink")],1),e._v(" Fix misused method to calculate block hash in evm related function.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/721",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#721"),t("OutboundLink")],1),e._v(" Fix mismatch block hash in rpc response when use eth.getBlock.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/730",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#730"),t("OutboundLink")],1),e._v(" Fix 'EIP2028' not open when Istanbul version has been enabled.")]),e._v(" "),t("li",[e._v("(app) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/749",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#749"),t("OutboundLink")],1),e._v(" Fix panic in "),t("code",[e._v("AnteHandler")]),e._v(" when gas price larger than 100000")]),e._v(" "),t("li",[e._v("(rpc) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/305",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#305"),t("OutboundLink")],1),e._v(" Update "),t("code",[e._v("eth_getTransactionCount")]),e._v(" to check for account existence before getting sequence and return 0 as the nonce if it doesn't exist.")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/pull/319",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#319"),t("OutboundLink")],1),e._v(" Fix "),t("code",[e._v("SetBlockHash")]),e._v(" that was setting the incorrect height during "),t("code",[e._v("BeginBlock")]),e._v(".")]),e._v(" "),t("li",[e._v("(evm) "),t("a",{attrs:{href:"https://github.com/cosmos/ethermint/issues/176",target:"_blank",rel:"noopener noreferrer"}},[e._v("tharsis#176"),t("OutboundLink")],1),e._v(" Updated Web3 transaction hash from using RLP hash. Now all transaction hashes exposed are amino hashes:\n"),t("ul",[t("li",[e._v("Removes "),t("code",[e._v("Hash()")]),e._v(" (RLP) function from "),t("code",[e._v("MsgEthereumTx")]),e._v(" to avoid confusion or misuse in future.")])])])])])}),[],!1,null,null,null);t.default=n.exports}}]);