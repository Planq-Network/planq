(window.webpackJsonp=window.webpackJsonp||[]).push([[273],{780:function(t,e,a){"use strict";a.r(e);var n=a(1),s=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"join-a-testnet"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#join-a-testnet"}},[t._v("#")]),t._v(" Join a Testnet")]),t._v(" "),e("p",{attrs:{synopsis:""}},[t._v("This document outlines the steps to join an existing testnet")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",[t._v("Currently there is no public testnet available, the next upcoming one will be announced soon.")])]),t._v(" "),e("h2",{attrs:{id:"pick-a-testnet"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pick-a-testnet"}},[t._v("#")]),t._v(" Pick a Testnet")]),t._v(" "),e("p",[t._v("You specify the network you want to join by setting the "),e("strong",[t._v("genesis file")]),t._v(" and "),e("strong",[t._v("seeds")]),t._v(". If you need more information about past networks, check our "),e("a",{attrs:{href:"https://github.com/planq-network/networks/testnet",target:"_blank",rel:"noopener noreferrer"}},[t._v("testnets repo"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Testnet Chain ID")]),t._v(" "),e("th",[t._v("Description")]),t._v(" "),e("th",[t._v("Site")]),t._v(" "),e("th",[t._v("Version")]),t._v(" "),e("th",[t._v("Status")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("planq_7000-1")])]),t._v(" "),e("td",[t._v("Arsia Mons Testnet")]),t._v(" "),e("td",[t._v("-")]),t._v(" "),e("td",[e("a",{attrs:{href:"https://github.com/planq-network/planq/releases",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("v0.1.x")]),e("OutboundLink")],1)]),t._v(" "),e("td",[e("code",[t._v("Stale")])])])])]),t._v(" "),e("h2",{attrs:{id:"install-planqd"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install-planqd"}},[t._v("#")]),t._v(" Install "),e("code",[t._v("planqd")])]),t._v(" "),e("p",[t._v("Follow the "),e("RouterLink",{attrs:{to:"/planq/docs/validators/quickstart/installation.html"}},[t._v("installation")]),t._v(" document to install the "+t._s(t.$themeConfig.project.name)+" binary "),e("code",[t._v(t._s(t.$themeConfig.project.binary))]),t._v(".")],1),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",[t._v("Make sure you have the right version of "),e("code",[t._v(t._s(t.$themeConfig.project.binary))]),t._v(" installed.")])]),t._v(" "),e("h3",{attrs:{id:"save-chain-id"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#save-chain-id"}},[t._v("#")]),t._v(" Save Chain ID")]),t._v(" "),e("p",[t._v("We recommend saving the testnet "),e("code",[t._v("chain-id")]),t._v(" into your "),e("code",[t._v(t._s(t.$themeConfig.project.binary))]),t._v("'s "),e("code",[t._v("client.toml")]),t._v(". This will make it so you do not have to manually pass in the "),e("code",[t._v("chain-id")]),t._v(" flag for every CLI command.")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",[t._v("See the Official "),e("RouterLink",{attrs:{to:"/planq/docs/users/technical_concepts/chain_id.html#official-chain-ids"}},[t._v("Chain IDs")]),t._v(" for reference.")],1)]),t._v(" "),e("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"cGxhbnFkIGNvbmZpZyBjaGFpbi1pZCBwbGFucV83MDAwLTEK"}}),t._v(" "),e("h2",{attrs:{id:"initialize-node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#initialize-node"}},[t._v("#")]),t._v(" Initialize Node")]),t._v(" "),e("p",[t._v("We need to initialize the node to create all the necessary validator and node configuration files:")]),t._v(" "),e("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"cGxhbnFkIGluaXQgJmx0O3lvdXJfY3VzdG9tX21vbmlrZXImZ3Q7IC0tY2hhaW4taWQgcGxhbnFfNzAwMC0xCg=="}}),t._v(" "),e("div",{staticClass:"custom-block danger"},[e("p",[t._v("Monikers can contain only ASCII characters. Using Unicode characters will render your node unreachable.")])]),t._v(" "),e("p",[t._v("By default, the "),e("code",[t._v("init")]),t._v(" command creates your "),e("code",[t._v("~/.planqd")]),t._v(" (i.e "),e("code",[t._v("$HOME")]),t._v(") directory with subfolders "),e("code",[t._v("config/")]),t._v(" and "),e("code",[t._v("data/")]),t._v(".\nIn the "),e("code",[t._v("config")]),t._v(" directory, the most important files for configuration are "),e("code",[t._v("app.toml")]),t._v(" and "),e("code",[t._v("config.toml")]),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"genesis-seeds"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#genesis-seeds"}},[t._v("#")]),t._v(" Genesis & Seeds")]),t._v(" "),e("h3",{attrs:{id:"copy-the-genesis-file"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#copy-the-genesis-file"}},[t._v("#")]),t._v(" Copy the Genesis File")]),t._v(" "),e("p",[t._v("Check the "),e("code",[t._v("genesis.json")]),t._v(" file from the "),e("a",{attrs:{href:"https://raw.githubusercontent.com/planq-network/networks/main/testnet//planq_7000-1/genesis.json",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("archive")]),e("OutboundLink")],1),t._v(" and copy it over to the "),e("code",[t._v("config")]),t._v(" directory: "),e("code",[t._v("~/.planqd/config/genesis.json")]),t._v(". This is a genesis file with the chain-id and genesis accounts balances.")]),t._v(" "),e("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"c3VkbyBhcHQgaW5zdGFsbCAteSB1bnppcCB3Z2V0CndnZXQgLVAgfi8ucGxhbnFkL2NvbmZpZyBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vcGxhbnEtbmV0d29yay9uZXR3b3Jrcy9tYWluL3Rlc3RuZXQvL3BsYW5xXzcwMDAtMS9nZW5lc2lzLmpzb24K"}}),t._v(" "),e("p",[t._v("Then verify the correctness of the genesis configuration file:")]),t._v(" "),e("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"cGxhbnFkIHZhbGlkYXRlLWdlbmVzaXMK"}}),t._v(" "),e("h3",{attrs:{id:"add-seed-nodes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#add-seed-nodes"}},[t._v("#")]),t._v(" Add Seed Nodes")]),t._v(" "),e("p",[t._v("Your node needs to know how to find "),e("a",{attrs:{href:"https://docs.tendermint.com/v0.34/tendermint-core/using-tendermint.html#peers",target:"_blank",rel:"noopener noreferrer"}},[t._v("peers"),e("OutboundLink")],1),t._v(". You'll need to add healthy "),e("a",{attrs:{href:"https://docs.tendermint.com/v0.34/tendermint-core/using-tendermint.html#seed",target:"_blank",rel:"noopener noreferrer"}},[t._v("seed nodes"),e("OutboundLink")],1),t._v(" to "),e("code",[t._v("$HOME/.planqd/config/config.toml")]),t._v(". The "),e("a",{attrs:{href:"https://github.com/evmos/testnets",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("testnets")]),e("OutboundLink")],1),t._v(" repo contains links to some seed nodes.")]),t._v(" "),e("p",[t._v("Edit the file located in "),e("code",[t._v("~/.planqd/config/config.toml")]),t._v(" and the "),e("code",[t._v("seeds")]),t._v(" to the following:")]),t._v(" "),e("tm-code-block",{staticClass:"codeblock",attrs:{language:"toml",base64:"IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwojIyMgICAgICAgICAgIFAyUCBDb25maWd1cmF0aW9uIE9wdGlvbnMgICAgICAgICAgICAgIyMjCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKW3AycF0KCiMgLi4uCgojIENvbW1hIHNlcGFyYXRlZCBsaXN0IG9mIHNlZWQgbm9kZXMgdG8gY29ubmVjdCB0bwpzZWVkcyA9ICZxdW90OyZsdDtub2RlLWlkJmd0O0AmbHQ7aXAmZ3Q7OiZsdDtwMnAgcG9ydCZndDsmcXVvdDsK"}}),t._v(" "),e("p",[t._v("You can use the following code to get seeds from the repo and add it to your config:")]),t._v(" "),e("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"U0VFRFM9YGN1cmwgLXNMIGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS90aGFyc2lzL3Rlc3RuZXRzL21haW4vcGxhbnFfNzAwMC0xL3NlZWRzLnR4dCB8IGF3ayAne3ByaW50ICQxfScgfCBwYXN0ZSAtcyAtZCwgLWAKc2VkIC1pLmJhayAtZSAmcXVvdDtzL15zZWVkcyA9Liovc2VlZHMgPSBcJnF1b3Q7JFNFRURTXCZxdW90Oy8mcXVvdDsgfi8ucGxhbnFkL2NvbmZpZy9jb25maWcudG9tbAo="}}),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",[t._v("For more information on seeds and peers, you can the Tendermint "),e("a",{attrs:{href:"https://docs.tendermint.com/master/spec/p2p/peer.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("P2P documentation"),e("OutboundLink")],1),t._v(".")])]),t._v(" "),e("h3",{attrs:{id:"add-persistent-peers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#add-persistent-peers"}},[t._v("#")]),t._v(" Add Persistent Peers")]),t._v(" "),e("p",[t._v("We can set the "),e("a",{attrs:{href:"https://docs.tendermint.com/v0.34/tendermint-core/using-tendermint.html#persistent-peer",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("persistent_peers")]),e("OutboundLink")],1),t._v(" field in "),e("code",[t._v("~/.planqd/config/config.toml")]),t._v(" to specify peers that your node will maintain persistent connections with. You can retrieve them from the list of\navailable peers on the "),e("a",{attrs:{href:"https://github.com/planq-network/networks/testnet",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("testnets")]),e("OutboundLink")],1),t._v(" repo.")]),t._v(" "),e("p",[t._v("A list of available persistent peers is also available in the "),e("code",[t._v("#find-peers")]),t._v(" channel in the "),e("a",{attrs:{href:"https://discord.gg/jGTPyYmpsq",target:"_blank",rel:"noopener noreferrer"}},[t._v("Planq Discord"),e("OutboundLink")],1),t._v(". You can get a random 10 entries from the "),e("code",[t._v("peers.txt")]),t._v(" file in the "),e("code",[t._v("PEERS")]),t._v(" variable by running the following command:")]),t._v(" "),e("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"UEVFUlM9YGN1cmwgLXNMIGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS90aGFyc2lzL3Rlc3RuZXRzL21haW4vcGxhbnFfNzAwMC0xL3BlZXJzLnR4dCB8IHNvcnQgLVIgfCBoZWFkIC1uIDEwIHwgYXdrICd7cHJpbnQgJDF9JyB8IHBhc3RlIC1zIC1kLCAtYAo="}}),t._v(" "),e("p",[t._v("Use "),e("code",[t._v("sed")]),t._v(" to include them into the configuration. You can also add them manually:")]),t._v(" "),e("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"c2VkIC1pLmJhayAtZSAmcXVvdDtzL15wZXJzaXN0ZW50X3BlZXJzICo9LiovcGVyc2lzdGVudF9wZWVycyA9IFwmcXVvdDskUEVFUlNcJnF1b3Q7LyZxdW90OyB+Ly5wbGFucWQvY29uZmlnL2NvbmZpZy50b21sCg=="}}),t._v(" "),e("h2",{attrs:{id:"run-a-testnet-validator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#run-a-testnet-validator"}},[t._v("#")]),t._v(" Run a Testnet Validator")]),t._v(" "),e("p",[t._v("Claim your testnet "+t._s(t.$themeConfig.project.testnet_denom)+" on the "),e("RouterLink",{attrs:{to:"/planq/docs/developers/testnet/faucet.html"}},[t._v("faucet")]),t._v(" using your validator account address and submit your validator account address:")],1),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",[t._v("For more details on how to run your validator, follow "),e("RouterLink",{attrs:{to:"/planq/docs/validators/setup/run_validator.html"}},[t._v("these")]),t._v(" instructions.")],1)]),t._v(" "),e("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"cGxhbnFkIHR4IHN0YWtpbmcgY3JlYXRlLXZhbGlkYXRvciBcCiAgLS1hbW91bnQ9MTAwMDAwMDAwMDAwMGF0cGxhbnEgXAogIC0tcHVia2V5PSQocGxhbnFkIHRlbmRlcm1pbnQgc2hvdy12YWxpZGF0b3IpIFwKICAtLW1vbmlrZXI9JnF1b3Q7UGxhbnFXaGFsZSZxdW90OyBcCiAgLS1jaGFpbi1pZD0mbHQ7Y2hhaW5faWQmZ3Q7IFwKICAtLWNvbW1pc3Npb24tcmF0ZT0mcXVvdDswLjEwJnF1b3Q7IFwKICAtLWNvbW1pc3Npb24tbWF4LXJhdGU9JnF1b3Q7MC4yMCZxdW90OyBcCiAgLS1jb21taXNzaW9uLW1heC1jaGFuZ2UtcmF0ZT0mcXVvdDswLjAxJnF1b3Q7IFwKICAtLW1pbi1zZWxmLWRlbGVnYXRpb249JnF1b3Q7MTAwMDAwMCZxdW90OyBcCiAgLS1nYXM9JnF1b3Q7YXV0byZxdW90OyBcCiAgLS1nYXMtcHJpY2VzPSZxdW90OzAuMDI1YXRwbGFucSZxdW90OyBcCiAgLS1mcm9tPSZsdDtrZXlfbmFtZSZndDsK"}}),t._v(" "),e("h2",{attrs:{id:"start-testnet"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#start-testnet"}},[t._v("#")]),t._v(" Start testnet")]),t._v(" "),e("p",[t._v("The final step is to "),e("RouterLink",{attrs:{to:"/planq/docs/validators/quickstart/run_node.html#start-node"}},[t._v("start the nodes")]),t._v(". Once enough voting power (+2/3) from the genesis validators is up-and-running, the testnet will start producing blocks.")],1),t._v(" "),e("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"cGxhbnFkIHN0YXJ0Cg=="}}),t._v(" "),e("h2",{attrs:{id:"upgrading-your-node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#upgrading-your-node"}},[t._v("#")]),t._v(" Upgrading Your Node")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",[t._v("These instructions are for full nodes that have ran on previous versions of and would like to upgrade to the latest testnet version.")])]),t._v(" "),e("h3",{attrs:{id:"reset-data"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reset-data"}},[t._v("#")]),t._v(" Reset Data")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",[t._v("If the version <new_version> you are upgrading to is not breaking from the previous one, you "),e("strong",[t._v("should not")]),t._v(" reset the data. If this is the case you can skip to "),e("a",{attrs:{href:"#restart"}},[t._v("Restart")])])]),t._v(" "),e("p",[t._v("First, remove the outdated files and reset the data.")]),t._v(" "),e("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"cm0gJEhPTUUvLnBsYW5xZC9jb25maWcvYWRkcmJvb2suanNvbiAkSE9NRS8ucGxhbnFkL2NvbmZpZy9nZW5lc2lzLmpzb24KcGxhbnFkIHRlbmRlcm1pbnQgdW5zYWZlLXJlc2V0LWFsbCAtLWhvbWUgJEhPTUUvLnBsYW5xZAo="}}),t._v(" "),e("p",[t._v("Your node is now in a pristine state while keeping the original "),e("code",[t._v("priv_validator.json")]),t._v(" and "),e("code",[t._v("config.toml")]),t._v(". If you had any sentry nodes or full nodes setup before,\nyour node will still try to connect to them, but may fail if they haven't also\nbeen upgraded.")]),t._v(" "),e("div",{staticClass:"custom-block danger"},[e("p",{staticClass:"custom-block-title"},[t._v("Warning")]),t._v(" "),e("p",[t._v("Make sure that every node has a unique "),e("code",[t._v("priv_validator.json")]),t._v(". Do not copy the "),e("code",[t._v("priv_validator.json")]),t._v(" from an old node to multiple new nodes. Running two nodes with the same "),e("code",[t._v("priv_validator.json")]),t._v(" will cause you to double sign.")])]),t._v(" "),e("h3",{attrs:{id:"restart"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#restart"}},[t._v("#")]),t._v(" Restart")]),t._v(" "),e("p",[t._v("To restart your node, just type:")]),t._v(" "),e("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"cGxhbnFkIHN0YXJ0Cg=="}}),t._v(" "),e("h2",{attrs:{id:"share-your-peer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#share-your-peer"}},[t._v("#")]),t._v(" Share your Peer")]),t._v(" "),e("p",[t._v("You can share your peer to posting it in the "),e("code",[t._v("#find-peers")]),t._v(" channel in the "),e("a",{attrs:{href:"https://discord.gg/jGTPyYmpsq",target:"_blank",rel:"noopener noreferrer"}},[t._v("Planq Discord"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",[t._v("To get your Node ID use")]),t._v(" "),e("tm-code-block",{staticClass:"codeblock",attrs:{language:"bash",base64:"cGxhbnFkIHRlbmRlcm1pbnQgc2hvdy1ub2RlLWlkCg=="}})],1),t._v(" "),e("h2",{attrs:{id:"state-syncing-a-node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#state-syncing-a-node"}},[t._v("#")]),t._v(" State Syncing a Node")]),t._v(" "),e("p",[t._v("If you want to join the network using State Sync (quick, but not applicable for archive nodes), check our "),e("a",{attrs:{href:"https://docs.planq.network/validators/setup/statesync.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("State Sync"),e("OutboundLink")],1),t._v(" page")])],1)}),[],!1,null,null,null);e.default=s.exports}}]);